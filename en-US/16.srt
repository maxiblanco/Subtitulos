1
00:00:11,599 --> 00:00:34,509
[Music]

2
00:00:31,250 --> 00:00:34,509
good good

3
00:00:35,840 --> 00:00:40,059
I hope you are having a beautiful

4
00:00:37,189 --> 00:00:42,619
week start is monday it's cold

5
00:00:40,058 --> 00:00:45,949
but coffee by means of one enters

6
00:00:42,619 --> 00:00:48,439
heat and tomatoes or mates too and

7
00:00:45,950 --> 00:00:51,170
we have another new edition of

8
00:00:48,439 --> 00:00:52,609
'cover meetings and finally after

9
00:00:51,170 --> 00:00:54,800
from a lot of time let's start

10
00:00:52,609 --> 00:00:59,600
some programming ladies and gentlemen

11
00:00:54,799 --> 00:01:06,280
finally as if this subject will be shot but

12
00:00:59,600 --> 00:01:08,509
well it will be hour past hour

13
00:01:06,280 --> 00:01:11,629
totally the panorama but well now

14
00:01:08,509 --> 00:01:13,189
yes we are already with this yes totally already

15
00:01:11,629 --> 00:01:16,789
it was time to start the rule so

16
00:01:13,189 --> 00:01:21,590
well how do you want to put the lay

17
00:01:16,789 --> 00:01:23,180
busy for let's go fast anymore we're not going to

18
00:01:21,590 --> 00:01:25,189
take more time people are anxious

19
00:01:23,180 --> 00:01:31,060
from a long time ago before

20
00:01:25,189 --> 00:01:34,599
it will start so the slide

21
00:01:31,060 --> 00:01:38,719
Say thanks

22
00:01:34,599 --> 00:01:40,579
terrific good for those who know me

23
00:01:38,719 --> 00:01:43,659
and for whom not my name today is

24
00:01:40,579 --> 00:01:46,489
villarreal bertoldi tell me joey this

25
00:01:43,659 --> 00:01:48,079
I work as a technical leader in

26
00:01:46,489 --> 00:01:49,099
mercadolibre and I am a co-founder of the

27
00:01:48,079 --> 00:01:50,719
developer community

28
00:01:49,099 --> 00:01:52,009
Argentina this part must have been

29
00:01:50,719 --> 00:01:54,909
heard ten times some people

30
00:01:52,010 --> 00:01:54,910
but it does not matter

31
00:01:54,939 --> 00:01:59,890
and today we are going to be talking about good

32
00:01:57,310 --> 00:02:01,480
you practice a solid code in small

33
00:01:59,890 --> 00:02:04,659
word habits to talk about

34
00:02:01,480 --> 00:02:07,570
solo principles by roberts and

35
00:02:04,659 --> 00:02:09,969
Martin a few years ago and who are

36
00:02:07,569 --> 00:02:11,739
part of a talking tool

37
00:02:09,969 --> 00:02:13,960
essential in software engineering

38
00:02:11,740 --> 00:02:16,570
many times we find code

39
00:02:13,960 --> 00:02:18,430
that we say there has to be some

40
00:02:16,569 --> 00:02:22,569
way to write this a little bit better more

41
00:02:18,430 --> 00:02:24,159
maintainable cuter and the idea of ​​these

42
00:02:22,569 --> 00:02:26,560
principles is that beyond what

43
00:02:24,159 --> 00:02:28,449
paradigm although it is focused on

44
00:02:26,560 --> 00:02:30,250
object oriented paradigm more

45
00:02:28,449 --> 00:02:34,539
beyond that language because we wanted

46
00:02:30,250 --> 00:02:37,598
to program this the idea is this

47
00:02:34,539 --> 00:02:40,030
organize and agree a certain language

48
00:02:37,598 --> 00:02:43,399
common to spot opportunities

49
00:02:40,030 --> 00:02:46,840
improvement and with that start working yes

50
00:02:43,400 --> 00:02:46,840
alright this

51
00:02:47,120 --> 00:02:51,439
this is the first time we are going to do

52
00:02:48,860 --> 00:02:54,200
a live of a programming theme like this

53
00:02:51,439 --> 00:02:55,609
that mechanics is going to be can go

54
00:02:54,199 --> 00:02:57,259
asking questions in chat

55
00:02:55,610 --> 00:02:59,019
My friend is going to be where a hand

56
00:02:57,259 --> 00:03:00,768
coordinating with that and we will be seeing

57
00:02:59,019 --> 00:03:03,560
comments and things we can go

58
00:03:00,769 --> 00:03:05,180
chatting feel free to comment what

59
00:03:03,560 --> 00:03:06,620
you like the topic if there is us

60
00:03:05,180 --> 00:03:08,599
understanding I am going to stick a

61
00:03:06,620 --> 00:03:10,340
look every now and then to see this if

62
00:03:08,598 --> 00:03:11,328
it is necessary to repeat some concept what

63
00:03:10,340 --> 00:03:12,500
sea

64
00:03:11,329 --> 00:03:14,840
this talk will be recorded in

65
00:03:12,500 --> 00:03:16,878
youtube anyway this

66
00:03:14,840 --> 00:03:20,000
and in periscope for those who are nothing

67
00:03:16,878 --> 00:03:21,889
watching on twitter so I don't know

68
00:03:20,000 --> 00:03:24,289
worry because that's why we're going

69
00:03:21,889 --> 00:03:26,759
slowly cautiously calm to go

70
00:03:24,289 --> 00:03:28,829
looking at each of these concepts

71
00:03:26,759 --> 00:03:31,429
the first thing we need to know about this

72
00:03:28,830 --> 00:03:31,430
subject is

73
00:03:31,479 --> 00:03:35,768
that there are little mice in our code

74
00:03:33,430 --> 00:03:38,430
and ladies and gentlemen there are little mice in

75
00:03:35,769 --> 00:03:41,650
our code and they have the name of

76
00:03:38,430 --> 00:03:45,159
root code which basically comes to blair

77
00:03:41,650 --> 00:03:48,430
of certain code that like expression

78
00:03:45,158 --> 00:03:49,870
of English than one of my friends who

79
00:03:48,430 --> 00:03:51,959
is connected is going to challenge me for how

80
00:03:49,870 --> 00:03:56,170
pronounce serve pronounce well code rap

81
00:03:51,959 --> 00:03:57,459
this one that basically talks about the

82
00:03:56,169 --> 00:04:00,239
literal translation in Spanish would

83
00:03:57,459 --> 00:04:02,610
rotten code what is it

84
00:04:00,240 --> 00:04:04,409
when an app turns look

85
00:04:02,610 --> 00:04:06,630
how poetic this description there is a

86
00:04:04,409 --> 00:04:08,819
purulent mass of code that

87
00:04:06,629 --> 00:04:10,650
developers there is a gap

88
00:04:08,819 --> 00:04:12,930
requires that's the and then they find

89
00:04:10,650 --> 00:04:15,930
increasingly difficult to maintain because

90
00:04:12,930 --> 00:04:18,030
increasingly difficult to maintain because

91
00:04:15,930 --> 00:04:21,300
many things happen in a large project

92
00:04:18,029 --> 00:04:22,829
scale especially when this one there

93
00:04:21,300 --> 00:04:25,009
lots of people working on that

94
00:04:22,829 --> 00:04:25,009
draft

95
00:04:26,959 --> 00:04:33,370
some of these things for example

96
00:04:31,060 --> 00:04:35,918
focuses on these four concepts that

97
00:04:33,370 --> 00:04:37,600
the more than one more than one person are

98
00:04:35,918 --> 00:04:40,120
is asking what we do talking about

99
00:04:37,600 --> 00:04:42,720
viscosity in the code I swear it's

100
00:04:40,120 --> 00:04:44,759
a term that is correct and that exists

101
00:04:42,720 --> 00:04:46,860
It is

102
00:04:44,759 --> 00:04:48,529
there are four symptoms that determine that

103
00:04:46,860 --> 00:04:51,090
the code is in a situation of

104
00:04:48,529 --> 00:04:53,049
help I need help and I need you to

105
00:04:51,089 --> 00:04:56,799
solve these problems

106
00:04:53,050 --> 00:04:59,408
this rigidity fragility immobility and

107
00:04:56,800 --> 00:05:01,629
viscosity let's go one by one

108
00:04:59,408 --> 00:05:04,719
writing what it is and how else or

109
00:05:01,629 --> 00:05:06,970
the less we can begin to detect them

110
00:05:04,720 --> 00:05:08,650
on the stiff side we have this

111
00:05:06,970 --> 00:05:10,950
that a minor change implies a

112
00:05:08,649 --> 00:05:13,239
complete system rebuild

113
00:05:10,949 --> 00:05:16,000
imagine for example we have a

114
00:05:13,240 --> 00:05:18,189
login screen is where the user

115
00:05:16,000 --> 00:05:21,160
and password the user of a field

116
00:05:18,189 --> 00:05:22,839
numerical this all validations of

117
00:05:21,160 --> 00:05:25,270
database were for them to just

118
00:05:22,839 --> 00:05:26,889
numerical and suddenly we have to

119
00:05:25,269 --> 00:05:28,728
support email addresses

120
00:05:26,889 --> 00:05:30,588
electronic

121
00:05:28,728 --> 00:05:31,938
tremendous problem we have because it involves

122
00:05:30,588 --> 00:05:33,588
that we have to rebuild from end to end

123
00:05:31,939 --> 00:05:35,449
tip the registration system

124
00:05:33,588 --> 00:05:38,300
users to support such a change

125
00:05:35,449 --> 00:05:40,520
because because the implementation that

126
00:05:38,300 --> 00:05:42,670
initial we did was too

127
00:05:40,519 --> 00:05:44,709
restrictive

128
00:05:42,670 --> 00:05:47,530
so well first problem that

129
00:05:44,709 --> 00:05:49,299
we have stiffness comes from the side of the

130
00:05:47,529 --> 00:05:50,829
coupling also in that sense

131
00:05:49,300 --> 00:05:54,910
we couple code we copy

132
00:05:50,829 --> 00:05:56,469
functionalities and this we start to have

133
00:05:54,910 --> 00:05:58,120
these allow a minor change

134
00:05:56,470 --> 00:06:01,560
as the description says there implies a

135
00:05:58,120 --> 00:06:01,560
complete system rebuild

136
00:06:02,240 --> 00:06:07,718
fragility refers to what

137
00:06:05,860 --> 00:06:10,060
suppose by following this example

138
00:06:07,718 --> 00:06:11,589
the login suddenly these changes

139
00:06:10,060 --> 00:06:12,579
start to affect things that nothing that

140
00:06:11,589 --> 00:06:14,829
see suppose our application

141
00:06:12,579 --> 00:06:17,139
supports comments and for some reason

142
00:06:14,829 --> 00:06:19,300
we had done something to do

143
00:06:17,139 --> 00:06:21,098
that how the name of the

144
00:06:19,300 --> 00:06:22,509
affected user as shown in

145
00:06:21,098 --> 00:06:25,509
the in the comments of our

146
00:06:22,509 --> 00:06:27,009
application and that then this question

147
00:06:25,509 --> 00:06:29,650
of fragility has to do with how

148
00:06:27,009 --> 00:06:31,360
changes in a module start to start

149
00:06:29,649 --> 00:06:33,899
to affect the behavior of others

150
00:06:31,360 --> 00:06:36,689
unrelated modules

151
00:06:33,899 --> 00:06:38,609
it's like an expansion effect

152
00:06:36,689 --> 00:06:40,610
of expansive or a repeat effect like

153
00:06:38,610 --> 00:06:42,840
when we throw a pebble in the water

154
00:06:40,610 --> 00:06:46,540
those repercussions begin to impact

155
00:06:42,839 --> 00:06:48,639
throughout the system module by module

156
00:06:46,540 --> 00:06:50,200
if we wish our modules well the

157
00:06:48,639 --> 00:06:52,209
idea is that

158
00:06:50,199 --> 00:06:54,009
we can keep them completely

159
00:06:52,209 --> 00:06:55,209
insulated with minimal connections

160
00:06:54,009 --> 00:06:58,060
indispensable so they can

161
00:06:55,209 --> 00:07:00,279
communicate but not because we change

162
00:06:58,060 --> 00:07:02,649
something that has nothing to do with other

163
00:07:00,279 --> 00:07:05,109
thing there should be involvement for that

164
00:07:02,649 --> 00:07:08,049
it seems obvious what I'm saying but

165
00:07:05,110 --> 00:07:10,750
the amount of times is impressive

166
00:07:08,050 --> 00:07:12,879
what happens we fall into this problem and

167
00:07:10,750 --> 00:07:15,629
generates headaches that mother

168
00:07:12,879 --> 00:07:15,629
I leave mine

169
00:07:15,920 --> 00:07:20,060
we have the question of immobility

170
00:07:17,860 --> 00:07:21,920
internal components of a module that does not

171
00:07:20,060 --> 00:07:24,240
we can extract and reuse in new

172
00:07:21,920 --> 00:07:28,979
environments

173
00:07:24,240 --> 00:07:30,300
this is the axiom if you want which

174
00:07:28,978 --> 00:07:33,050
It is the problem that many times gives

175
00:07:30,300 --> 00:07:35,129
source a component library

176
00:07:33,050 --> 00:07:36,180
imagine we made an application a

177
00:07:35,129 --> 00:07:38,038
combat bunch for example a

178
00:07:36,180 --> 00:07:41,009
registration form we did all the

179
00:07:38,038 --> 00:07:42,930
components of data fields that

180
00:07:41,009 --> 00:07:44,669
require that form directly

181
00:07:42,930 --> 00:07:48,918
imagine that we are for example with

182
00:07:44,668 --> 00:07:51,269
react by throwing an example or having

183
00:07:48,918 --> 00:07:53,609
with a range app can these

184
00:07:51,269 --> 00:07:55,198
things apply to any any

185
00:07:53,610 --> 00:07:56,699
it's technological that's why I start shooting

186
00:07:55,199 --> 00:07:58,699
names to be made

187
00:07:56,699 --> 00:08:01,400
an idea

188
00:07:58,699 --> 00:08:03,889
we design our components we have

189
00:08:01,399 --> 00:08:05,449
a back end that feeds them and we couple

190
00:08:03,889 --> 00:08:07,849
everything in such a way that if we have to

191
00:08:05,449 --> 00:08:09,949
reuse that registration form in

192
00:08:07,850 --> 00:08:12,409
another part in another application or even

193
00:08:09,949 --> 00:08:14,778
elsewhere in the same app

194
00:08:12,408 --> 00:08:16,009
the fastest solution we can think of

195
00:08:14,778 --> 00:08:18,588
it's copy and paste the code because it's

196
00:08:16,009 --> 00:08:19,699
everything so intertwined so coupled

197
00:08:18,588 --> 00:08:22,668
we return to this concept of

198
00:08:19,699 --> 00:08:25,240
coupling it's impossible to remove it

199
00:08:22,668 --> 00:08:27,250
hence reuse it

200
00:08:25,240 --> 00:08:28,030
in most frameworks and ibai

201
00:08:27,250 --> 00:08:30,399
in which we are working

202
00:08:28,029 --> 00:08:31,989
currently and in other web technologies

203
00:08:30,399 --> 00:08:34,870
there is a lot of talk about this

204
00:08:31,990 --> 00:08:36,610
immobility action components is

205
00:08:34,870 --> 00:08:38,500
something that prevents us from component

206
00:08:36,610 --> 00:08:40,000
hoist correctly then when

207
00:08:38,500 --> 00:08:42,750
we begin to face this symptom

208
00:08:40,000 --> 00:08:45,339
is that some design-level decision

209
00:08:42,750 --> 00:08:47,049
generated a problem and that this is going to

210
00:08:45,339 --> 00:08:50,310
prevent after this movement of

211
00:08:47,049 --> 00:08:50,309
components we need

212
00:08:50,549 --> 00:08:54,689
and this and this viscosity factor

213
00:08:53,100 --> 00:08:56,430
which sounds a little disgusting when I

214
00:08:54,690 --> 00:09:00,390
we say it sounds like the code is

215
00:08:56,429 --> 00:09:01,979
thickened like this everything fierce has to do with

216
00:09:00,389 --> 00:09:04,259
what to compile and test for

217
00:09:01,980 --> 00:09:06,060
testing a change is difficult and takes time

218
00:09:04,259 --> 00:09:07,919
long time in simple change is expensive

219
00:09:06,059 --> 00:09:09,278
and involves modifying multiple yogurts or

220
00:09:07,919 --> 00:09:11,799
covers

221
00:09:09,278 --> 00:09:15,220
with all this fashion that we also have

222
00:09:11,799 --> 00:09:17,769
of the same services the micro

223
00:09:15,220 --> 00:09:19,250
front-end if everything micro

224
00:09:17,769 --> 00:09:21,110
t

225
00:09:19,250 --> 00:09:22,970
and this has to do also for example

226
00:09:21,110 --> 00:09:25,820
on the web you see a lot with the packages in

227
00:09:22,970 --> 00:09:27,950
rpm if you ever noticed what's up

228
00:09:25,820 --> 00:09:30,740
behind an urged pm they will see that

229
00:09:27,950 --> 00:09:32,240
there are 20,000 packages installed for

230
00:09:30,740 --> 00:09:34,070
do

231
00:09:32,240 --> 00:09:35,600
I don't know to install the first ones

232
00:09:34,070 --> 00:09:39,240
necessary components for a framework

233
00:09:35,600 --> 00:09:41,070
or a super basic device library

234
00:09:39,240 --> 00:09:43,139
we went so far with the

235
00:09:41,070 --> 00:09:45,089
modularization of things that up

236
00:09:43,139 --> 00:09:47,909
there are packages that make one that

237
00:09:45,089 --> 00:09:52,310
fulfills the function of is negative and is

238
00:09:47,909 --> 00:09:52,309
nano and integrates with things that

239
00:09:52,320 --> 00:09:55,110
that one stays thinking because we have

240
00:09:54,179 --> 00:09:58,289
packages for functions is in

241
00:09:55,110 --> 00:09:59,909
petite discussion aside for everything

242
00:09:58,289 --> 00:10:03,029
a whole an encounter that in itself

243
00:09:59,909 --> 00:10:04,889
probably but this when we have

244
00:10:03,029 --> 00:10:06,509
have to make changes on multiple layers and

245
00:10:04,889 --> 00:10:08,639
all these layers exist in different

246
00:10:06,509 --> 00:10:11,370
projects is a problem because we have

247
00:10:08,639 --> 00:10:13,289
that for example to be compiling the

248
00:10:11,370 --> 00:10:15,480
dependencies interdependencies walk

249
00:10:13,289 --> 00:10:17,879
linking components to see for

250
00:10:15,480 --> 00:10:21,120
do an end-to-end test and that

251
00:10:17,879 --> 00:10:22,860
translates into wasting time a lot

252
00:10:21,120 --> 00:10:24,320
time especially if they are projects

253
00:10:22,860 --> 00:10:27,830
big

254
00:10:24,320 --> 00:10:29,450
so there the importance of seeing how

255
00:10:27,830 --> 00:10:31,460
we can do to make scalability

256
00:10:29,450 --> 00:10:34,379
of the project and the number of modules

257
00:10:31,460 --> 00:10:36,780
that we work

258
00:10:34,379 --> 00:10:38,580
are simple enough for

259
00:10:36,779 --> 00:10:40,860
we can have a lot if necessary but

260
00:10:38,580 --> 00:10:44,100
that at the same time we can

261
00:10:40,860 --> 00:10:47,340
have a way to test them out

262
00:10:44,100 --> 00:10:50,600
fast without having to replicate all this

263
00:10:47,340 --> 00:10:50,600
super complex structure

264
00:10:55,620 --> 00:11:02,639
this paradigm comes to our rescue

265
00:10:59,940 --> 00:11:06,360
of principles called soles

266
00:11:02,639 --> 00:11:08,009
solid comes is an acronym like those

267
00:11:06,360 --> 00:11:10,769
colored cubes will denote a

268
00:11:08,009 --> 00:11:12,480
little while representing five principles

269
00:11:10,769 --> 00:11:16,309
different that we are going to be touring

270
00:11:12,480 --> 00:11:16,310
throughout this talk

271
00:11:16,850 --> 00:11:21,709
remember that if any little thing is not left

272
00:11:19,759 --> 00:11:23,120
clear if they want us to see some

273
00:11:21,708 --> 00:11:25,818
example something do nothing but

274
00:11:23,120 --> 00:11:27,259
throw the comment by sat at me that

275
00:11:25,818 --> 00:11:30,049
It will be where I send to help me

276
00:11:27,259 --> 00:11:31,639
so I miss one and we do some

277
00:11:30,049 --> 00:11:34,069
example like to see what it's about

278
00:11:31,639 --> 00:11:37,389
this well

279
00:11:34,070 --> 00:11:37,390
solid means

280
00:11:38,019 --> 00:11:43,419
single main responsability this is

281
00:11:40,899 --> 00:11:45,860
in the s the principle of unique

282
00:11:43,419 --> 00:11:49,159
responsibility

283
00:11:45,860 --> 00:11:51,320
open closed principal at the beginning

284
00:11:49,159 --> 00:11:54,439
open closed

285
00:11:51,320 --> 00:11:57,120
on the main exhaust station ls or

286
00:11:54,440 --> 00:12:00,000
disc replacement principle

287
00:11:57,120 --> 00:12:02,159
in laws interfax serguéi are main

288
00:12:00,000 --> 00:12:05,278
or a principle of segregation of

289
00:12:02,159 --> 00:12:06,929
interfaces and finally dependency

290
00:12:05,278 --> 00:12:08,700
main investment for the law

291
00:12:06,929 --> 00:12:11,289
inversion principle of losing

292
00:12:08,700 --> 00:12:13,509
depends on dependencies

293
00:12:11,289 --> 00:12:14,828
we will make a brief review of each

294
00:12:13,509 --> 00:12:16,230
one of these concepts before entering

295
00:12:14,828 --> 00:12:18,109
in detail

296
00:12:16,230 --> 00:12:20,310
sir responsible for principal

297
00:12:18,110 --> 00:12:23,340
principle of sole responsibility

298
00:12:20,309 --> 00:12:25,139
means that our function class or

299
00:12:23,340 --> 00:12:28,320
equivalent structure containing

300
00:12:25,139 --> 00:12:31,100
code has to do one and only

301
00:12:28,320 --> 00:12:31,100
one thing

302
00:12:31,159 --> 00:12:38,639
imagine we have a function that

303
00:12:35,220 --> 00:12:41,879
already responsibilities

304
00:12:38,639 --> 00:12:43,980
generate an invoice generate an invoice

305
00:12:41,879 --> 00:12:47,539
has a lot of parts generate the

306
00:12:43,980 --> 00:12:49,850
letterhead generate

307
00:12:47,539 --> 00:12:54,708
the detail of each of each line of the

308
00:12:49,850 --> 00:12:56,360
invoice post taxes do the

309
00:12:54,708 --> 00:12:58,479
sum of your totals apply discounts

310
00:12:56,360 --> 00:13:02,539
apply surcharges and calculate the total

311
00:12:58,480 --> 00:13:06,180
generate the impression send it and others

312
00:13:02,539 --> 00:13:08,129
imagine for a second what to do

313
00:13:06,179 --> 00:13:09,719
things fast and because it was to see

314
00:13:08,129 --> 00:13:12,419
how it almost always happens in this industry

315
00:13:09,720 --> 00:13:13,920
we put all that code in a super

316
00:13:12,419 --> 00:13:15,360
archi mega function thousand lines

317
00:13:13,919 --> 00:13:18,049
code that magic absolutely does

318
00:13:15,360 --> 00:13:18,050
everything

319
00:13:18,818 --> 00:13:22,149
what is the problem we have with that

320
00:13:20,409 --> 00:13:24,100
you have to read and keep my lines

321
00:13:22,149 --> 00:13:26,198
code in the same file

322
00:13:24,100 --> 00:13:28,089
and if we want to reuse things for

323
00:13:26,198 --> 00:13:30,189
example if tomorrow I have to

324
00:13:28,089 --> 00:13:31,899
generate another type of billing or

325
00:13:30,190 --> 00:13:34,509
documentation they share some level

326
00:13:31,899 --> 00:13:36,220
some of that data we have a

327
00:13:34,509 --> 00:13:38,240
problem because everything is coupled to the

328
00:13:36,220 --> 00:13:42,500
invoice generation for example

329
00:13:38,240 --> 00:13:44,480
so we look we look for the way

330
00:13:42,500 --> 00:13:46,370
that our container structures of

331
00:13:44,480 --> 00:13:49,899
codes be as specific

332
00:13:46,370 --> 00:13:49,899
specific and small possible

333
00:13:50,450 --> 00:13:57,020
open clouds open closed has to

334
00:13:53,629 --> 00:14:00,370
do with how we handle the

335
00:13:57,019 --> 00:14:00,370
code extensibility

336
00:14:00,409 --> 00:14:08,509
open cloud for example talks about how a

337
00:14:04,458 --> 00:14:10,939
time the code was written and given

338
00:14:08,509 --> 00:14:12,970
for productive that code cannot be

339
00:14:10,940 --> 00:14:15,339
Modify

340
00:14:12,970 --> 00:14:19,300
means open for extension

341
00:14:15,339 --> 00:14:21,339
closed for modification because because

342
00:14:19,299 --> 00:14:24,309
if we start modifying code

343
00:14:21,339 --> 00:14:25,990
that we already consider productive or that

344
00:14:24,309 --> 00:14:28,369
it's designed it's already implemented

345
00:14:25,990 --> 00:14:30,710
it's already working

346
00:14:28,370 --> 00:14:32,578
we cannot guarantee that it maintains the

347
00:14:30,710 --> 00:14:35,579
same functionality

348
00:14:32,578 --> 00:14:38,399
instead if we think that each

349
00:14:35,578 --> 00:14:39,899
code iteration is a kind of

350
00:14:38,399 --> 00:14:43,308
additive function in which we are going

351
00:14:39,899 --> 00:14:45,659
adding and extending functionality

352
00:14:43,308 --> 00:14:47,249
we can preserve that functionality

353
00:14:45,659 --> 00:14:49,249
core of whatever we are

354
00:14:47,249 --> 00:14:50,970
working is going to keep up over time

355
00:14:49,249 --> 00:14:52,350
because we are not changing

356
00:14:50,970 --> 00:14:56,389
behaviors but we're

357
00:14:52,350 --> 00:14:56,389
adding or extending

358
00:14:58,029 --> 00:15:01,899
broom replacement principle to

359
00:14:59,799 --> 00:15:04,509
broad outlines speaks of when

360
00:15:01,899 --> 00:15:06,879
we start to work

361
00:15:04,509 --> 00:15:08,789
with multiple or multiple types

362
00:15:06,879 --> 00:15:12,929
variations of the same kind of thing

363
00:15:08,789 --> 00:15:12,929
let's imagine two figures

364
00:15:13,580 --> 00:15:17,600
if we use a function that has a

365
00:15:15,740 --> 00:15:20,490
more general abstraction of each of

366
00:15:17,600 --> 00:15:23,629
the kinds of geometric shapes out there

367
00:15:20,490 --> 00:15:25,709
it doesn't matter what interface or what kind of

368
00:15:23,629 --> 00:15:27,689
variation let's move on to that function

369
00:15:25,708 --> 00:15:29,208
should answer exactly for all

370
00:15:27,690 --> 00:15:31,490
same

371
00:15:29,208 --> 00:15:33,258
because the base behavior for more

372
00:15:31,490 --> 00:15:35,720
that each interface can implement

373
00:15:33,259 --> 00:15:39,699
particularities in abstraction more

374
00:15:35,720 --> 00:15:39,699
general is the same

375
00:15:42,919 --> 00:15:48,079
adding and feel interfaces has to

376
00:15:45,289 --> 00:15:52,339
do with this

377
00:15:48,080 --> 00:15:54,650
what happens when we offer many more

378
00:15:52,340 --> 00:15:56,240
options to the person who is going to

379
00:15:54,649 --> 00:15:58,819
implement a class or it's going to

380
00:15:56,240 --> 00:16:02,299
use a class that has to

381
00:15:58,820 --> 00:16:04,700
really use this happens a lot

382
00:16:02,299 --> 00:16:06,469
when we extend objects we extend

383
00:16:04,700 --> 00:16:08,060
from the first abstraction that we have to

384
00:16:06,470 --> 00:16:09,889
hand because we saw two methods that we

385
00:16:08,059 --> 00:16:12,979
serve for example

386
00:16:09,889 --> 00:16:15,750
and suddenly we want this

387
00:16:12,980 --> 00:16:18,269
use yes

388
00:16:15,750 --> 00:16:22,169
there we can repeat the I repeat

389
00:16:18,269 --> 00:16:25,470
in a short while liskov this segregation of

390
00:16:22,169 --> 00:16:28,049
interfaces has to do with this the

391
00:16:25,470 --> 00:16:30,660
concept of how do we make it

392
00:16:28,049 --> 00:16:32,039
reopen this like for what like

393
00:16:30,659 --> 00:16:34,079
happens with an interface when we offer

394
00:16:32,039 --> 00:16:36,899
too many methods because we wanted

395
00:16:34,080 --> 00:16:38,790
using two or three methods happens when

396
00:16:36,899 --> 00:16:40,169
we extend from very basic classes that

397
00:16:38,789 --> 00:16:41,759
offer a lot of things and we want

398
00:16:40,169 --> 00:16:44,219
do a specific implementation it

399
00:16:41,759 --> 00:16:45,870
we will see examples well

400
00:16:44,220 --> 00:16:47,759
concrete code of each of these

401
00:16:45,870 --> 00:16:51,419
things

402
00:16:47,759 --> 00:16:54,059
and finally we have this

403
00:16:51,419 --> 00:16:56,099
dependency investment that one of the

404
00:16:54,059 --> 00:16:58,769
things it encompasses is injection of

405
00:16:56,100 --> 00:17:00,420
dependencies that basically works and

406
00:16:58,769 --> 00:17:02,279
has to do with how we handle

407
00:17:00,419 --> 00:17:04,379
abstractions and we reuse them and the

408
00:17:02,279 --> 00:17:05,970
we share we are going to go now we are going to

409
00:17:04,380 --> 00:17:08,640
start delving into each of

410
00:17:05,970 --> 00:17:11,690
these points to review this well

411
00:17:08,640 --> 00:17:11,690
in detail how are we doing

412
00:17:13,689 --> 00:17:19,089
alright let's talk about senna s

413
00:17:16,528 --> 00:17:21,509
main responsability of then and

414
00:17:19,088 --> 00:17:21,509
we are going to

415
00:17:21,579 --> 00:17:25,869
keep this image the fact of

416
00:17:24,160 --> 00:17:28,870
because you can doesn't mean you should

417
00:17:25,869 --> 00:17:30,849
see what happens to that swiss army knife

418
00:17:28,869 --> 00:17:32,079
with its 20 million gadgets and it's

419
00:17:30,849 --> 00:17:34,319
something else is what I was saying about

420
00:17:32,079 --> 00:17:36,970
billing example a while ago

421
00:17:34,319 --> 00:17:40,919
because we put everything in the same unit

422
00:17:36,970 --> 00:17:40,920
of codes and we can do several

423
00:17:41,960 --> 00:17:47,690
a class we say should have only one

424
00:17:44,898 --> 00:17:49,609
reason to mutate is to say a single reason

425
00:17:47,690 --> 00:17:52,370
so that its state changes or so that

426
00:17:49,609 --> 00:17:54,109
run things in this sense all kinds

427
00:17:52,369 --> 00:17:59,048
or similar structure in the code by

428
00:17:54,109 --> 00:17:59,048
that has to do only one thing yes

429
00:17:59,240 --> 00:18:03,710
any behavior functionality

430
00:18:01,940 --> 00:18:05,630
that we determine that this

431
00:18:03,710 --> 00:18:08,299
code container structure call it

432
00:18:05,630 --> 00:18:11,360
class call it function or whatever

433
00:18:08,299 --> 00:18:13,869
call it code routine in general should

434
00:18:11,359 --> 00:18:15,579
associate with the same purpose

435
00:18:13,869 --> 00:18:17,379
and that purpose has to be what

436
00:18:15,579 --> 00:18:20,470
concrete enough also because

437
00:18:17,380 --> 00:18:22,270
we can also say an example of the

438
00:18:20,470 --> 00:18:24,130
application I want to make a cart of

439
00:18:22,269 --> 00:18:26,950
good shopping but a shopping cart

440
00:18:24,130 --> 00:18:30,160
it has a lot of implications not

441
00:18:26,950 --> 00:18:31,960
we can't it would be nice to think that

442
00:18:30,160 --> 00:18:35,100
we can put all that in one

443
00:18:31,960 --> 00:18:35,100
code structure well

444
00:18:35,660 --> 00:18:40,130
when we talk about what a class has

445
00:18:38,420 --> 00:18:42,200
than having behaviors that are associated

446
00:18:40,130 --> 00:18:44,930
to the same purpose

447
00:18:42,200 --> 00:18:46,880
we talked about it must have cohesion and

448
00:18:44,930 --> 00:18:48,350
precisely what we want is to indicate

449
00:18:46,880 --> 00:18:51,170
that there can be multiple methods

450
00:18:48,349 --> 00:18:52,669
multiple properties in which

451
00:18:51,170 --> 00:18:54,980
you can go working and adding

452
00:18:52,670 --> 00:18:57,980
behavior as long as you follow

453
00:18:54,980 --> 00:19:00,490
this mother rule of must associate a

454
00:18:57,980 --> 00:19:00,490
same purpose

455
00:19:01,410 --> 00:19:05,279
when the purpose of the class is

456
00:19:03,059 --> 00:19:08,409
meets in that sense they can mutate one or

457
00:19:05,279 --> 00:19:11,440
multiple members and this is expected

458
00:19:08,410 --> 00:19:13,420
because although they can mutate more and

459
00:19:11,440 --> 00:19:14,830
change various components of the state of

460
00:19:13,420 --> 00:19:16,360
the structure we are with

461
00:19:14,829 --> 00:19:18,849
working

462
00:19:16,359 --> 00:19:20,529
mutate for the same reason which is the

463
00:19:18,849 --> 00:19:23,189
purpose for which we are designing

464
00:19:20,529 --> 00:19:23,190
This object

465
00:19:25,670 --> 00:19:33,430
we are going to open cloud print second which is

466
00:19:29,299 --> 00:19:33,430
one of the most complicated out there

467
00:19:34,529 --> 00:19:38,839
a class should be open to be

468
00:19:37,289 --> 00:19:40,730
extended

469
00:19:38,839 --> 00:19:42,169
that is, if we define a

470
00:19:40,730 --> 00:19:45,500
behavior enough

471
00:19:42,170 --> 00:19:47,509
general we can allow people

472
00:19:45,500 --> 00:19:50,210
who implement and use these classes

473
00:19:47,509 --> 00:19:52,549
that we design to add behavior to

474
00:19:50,210 --> 00:19:54,890
through extensions extensions or

475
00:19:52,549 --> 00:19:56,779
that extension can be given either by

476
00:19:54,890 --> 00:19:59,680
inheritance or composition does not come the

477
00:19:56,779 --> 00:19:59,680
case the strategy

478
00:20:00,410 --> 00:20:05,330
but if it is important that in the design and

479
00:20:03,619 --> 00:20:07,169
let's talk a lot about this design

480
00:20:05,329 --> 00:20:10,079
of the solution

481
00:20:07,170 --> 00:20:11,700
add functionality to

482
00:20:10,079 --> 00:20:14,279
as new requirements arise

483
00:20:11,700 --> 00:20:17,460
if we design such a class

484
00:20:14,279 --> 00:20:19,200
way we limit the universe of

485
00:20:17,460 --> 00:20:20,340
action you have we risk

486
00:20:19,200 --> 00:20:22,580
that when we drop a new

487
00:20:20,339 --> 00:20:22,579
request

488
00:20:22,700 --> 00:20:28,700
let's have some sort of problem

489
00:20:25,730 --> 00:20:32,220
that prevents us from working neatly

490
00:20:28,700 --> 00:20:34,558
because we are limiting

491
00:20:32,220 --> 00:20:37,730
the universe of possibilities with which that

492
00:20:34,558 --> 00:20:37,730
class can work

493
00:20:41,250 --> 00:20:46,259
similarly we cannot walk

494
00:20:43,849 --> 00:20:48,480
modifying a class that is already past

495
00:20:46,259 --> 00:20:51,750
to production because

496
00:20:48,480 --> 00:20:53,730
because because if that class is in a

497
00:20:51,750 --> 00:20:55,829
productive environment and it's already being

498
00:20:53,730 --> 00:20:58,500
used by different people and

499
00:20:55,829 --> 00:21:00,210
different implementations those

500
00:20:58,500 --> 00:21:03,000
modifications can have impacts

501
00:21:00,210 --> 00:21:05,850
unwanted and put them in a situation

502
00:21:03,000 --> 00:21:08,750
ok we made a change and we don't know why

503
00:21:05,849 --> 00:21:08,750
what or what happened

504
00:21:08,789 --> 00:21:14,819
then be careful with those changes

505
00:21:11,089 --> 00:21:17,009
that's why we always talk about we add

506
00:21:14,819 --> 00:21:19,169
code we do not modify because the

507
00:21:17,009 --> 00:21:21,629
modifications have repercussions that

508
00:21:19,170 --> 00:21:22,620
we will not always be able to measure because in

509
00:21:21,630 --> 00:21:25,310
a project that is getting bigger

510
00:21:22,619 --> 00:21:30,109
enlarging and enlarging it becomes

511
00:21:25,309 --> 00:21:32,210
getting harder in that regard yeah

512
00:21:30,109 --> 00:21:34,579
so we talk about a class should

513
00:21:32,210 --> 00:21:37,340
be closed to be modified the

514
00:21:34,579 --> 00:21:39,109
only reason why we should do

515
00:21:37,339 --> 00:21:40,579
changes in that class is for obviously

516
00:21:39,109 --> 00:21:41,959
correct mistakes because there are mistakes

517
00:21:40,579 --> 00:21:45,069
we are going to commit there will always be

518
00:21:41,960 --> 00:21:47,639
mistakes we will not be able to avoid

519
00:21:45,069 --> 00:21:49,898
we can fly us on the flag of the

520
00:21:47,638 --> 00:21:51,219
event development text we can do a

521
00:21:49,898 --> 00:21:53,678
lot of things but we're still

522
00:21:51,220 --> 00:21:55,149
human and we will make mistakes and if

523
00:21:53,679 --> 00:21:57,120
are not technical errors can be

524
00:21:55,148 --> 00:21:59,469
errors at the requirements level

525
00:21:57,119 --> 00:22:01,209
then there is no escape from the

526
00:21:59,470 --> 00:22:03,808
mistakes that's important to mark

527
00:22:01,210 --> 00:22:03,808
in that sense

528
00:22:04,179 --> 00:22:09,570
seems contradictory

529
00:22:06,450 --> 00:22:10,740
that a class that we can modify only

530
00:22:09,569 --> 00:22:12,679
the class under certain contradictions

531
00:22:10,740 --> 00:22:14,630
and at the same time let us extend it

532
00:22:12,680 --> 00:22:17,120
but

533
00:22:14,630 --> 00:22:18,590
of course exactly as nobody says in the

534
00:22:17,119 --> 00:22:21,619
comments are throwing out the idea that

535
00:22:18,589 --> 00:22:23,000
keep it as a black box i have

536
00:22:21,619 --> 00:22:25,459
than to assume that a class that is already

537
00:22:23,000 --> 00:22:27,410
designed it's already implemented it has

538
00:22:25,460 --> 00:22:29,390
have to function and in order to preserve that

539
00:22:27,410 --> 00:22:31,940
behavior I need not get in

540
00:22:29,390 --> 00:22:34,909
changes but build around that

541
00:22:31,940 --> 00:22:39,798
in that sense yes

542
00:22:34,909 --> 00:22:39,799
imagine let's draw a little bit

543
00:22:42,028 --> 00:22:46,710
let's see if this works this will never

544
00:22:44,219 --> 00:22:48,769
I did it live but today I feel daring

545
00:22:46,710 --> 00:22:51,789
and authentic so

546
00:22:48,769 --> 00:22:51,789
let's see what happens

547
00:22:53,359 --> 00:23:02,639
let's imagine for a moment that we have

548
00:22:57,369 --> 00:23:06,649
a function a class better said that

549
00:23:02,640 --> 00:23:11,170
we are better we have a class

550
00:23:06,650 --> 00:23:11,170
which is called shape or form

551
00:23:11,990 --> 00:23:17,089
and we want for example this one that has

552
00:23:14,630 --> 00:23:19,950
a function that

553
00:23:17,089 --> 00:23:22,759
calculated

554
00:23:19,950 --> 00:23:22,759
the area

555
00:23:24,599 --> 00:23:30,299
as there are different ways to calculate the

556
00:23:27,450 --> 00:23:31,559
area this will most likely not have

557
00:23:30,299 --> 00:23:34,589
it has to be a class and it has to be

558
00:23:31,559 --> 00:23:37,500
rather something like an interface because

559
00:23:34,589 --> 00:23:40,079
each shape each geometric figure has

560
00:23:37,500 --> 00:23:41,490
your way of expressing this example there

561
00:23:40,079 --> 00:23:44,210
so let's replace here x

562
00:23:41,490 --> 00:23:44,210
interface

563
00:23:44,659 --> 00:23:49,639
just in case this seems like code but

564
00:23:47,808 --> 00:23:51,200
it's closer to the pseudo code so

565
00:23:49,638 --> 00:23:55,459
don't worry about mistakes

566
00:23:51,200 --> 00:23:57,319
score or some minor detail is

567
00:23:55,460 --> 00:23:59,640
simply by way of exemplifying

568
00:23:57,319 --> 00:24:02,730
roughly the principles

569
00:23:59,640 --> 00:24:08,750
then suppose that in that context

570
00:24:02,730 --> 00:24:08,750
I have a rectangle class

571
00:24:12,859 --> 00:24:17,859
and I also have a class nearby

572
00:24:21,559 --> 00:24:26,149
each of these classes can

573
00:24:23,599 --> 00:24:30,579
implement area calculation as you

574
00:24:26,150 --> 00:24:30,580
correspond as convenient

575
00:24:30,710 --> 00:24:35,240
so in this way we are

576
00:24:33,589 --> 00:24:37,339
allowing the

577
00:24:35,240 --> 00:24:41,028
functionality because we declare a

578
00:24:37,339 --> 00:24:44,869
contract on a base way of working

579
00:24:41,028 --> 00:24:47,210
without having to specify

580
00:24:44,869 --> 00:24:48,739
how is the behavior for all

581
00:24:47,210 --> 00:24:50,850
shapes imagine if I had

582
00:24:48,740 --> 00:24:53,809
done this myself

583
00:24:50,849 --> 00:24:56,269
in a single function

584
00:24:53,809 --> 00:24:57,919
suppose instead of an interface

585
00:24:56,269 --> 00:24:59,900
I would have proceeded with what was

586
00:24:57,920 --> 00:25:02,830
point of writing it was to boot with

587
00:24:59,900 --> 00:25:02,830
a safe class

588
00:25:05,130 --> 00:25:09,540
and start defining a calculation method

589
00:25:07,380 --> 00:25:12,990
of area

590
00:25:09,539 --> 00:25:12,990
calculate edit area

591
00:25:13,380 --> 00:25:16,650
with some parameters I don't know which ones

592
00:25:15,269 --> 00:25:20,460
Imagine that I would have to be

593
00:25:16,650 --> 00:25:23,769
asking is how

594
00:25:20,460 --> 00:25:26,090
a rectangle for example

595
00:25:23,769 --> 00:25:29,129
so

596
00:25:26,089 --> 00:25:32,000
i do some of these things

597
00:25:29,130 --> 00:25:34,010
is the shape a circle

598
00:25:32,000 --> 00:25:35,809
and so with each of the themes

599
00:25:34,009 --> 00:25:38,589
imagine there may be we have to

600
00:25:35,809 --> 00:25:40,269
make one and for each shape

601
00:25:38,589 --> 00:25:42,189
and this without scalable and we have to

602
00:25:40,269 --> 00:25:45,220
keep modifying and pasting it

603
00:25:42,190 --> 00:25:49,360
method all the time then we're going to

604
00:25:45,220 --> 00:25:52,419
say this does not network does not continue open

605
00:25:49,359 --> 00:25:55,418
cloud nor solid if we go to the case of

606
00:25:52,419 --> 00:25:57,309
responsible design and sorry don't follow and

607
00:25:55,419 --> 00:26:00,389
That boy

608
00:25:57,308 --> 00:26:00,388
Let's say

609
00:26:01,950 --> 00:26:06,230
while this one does

610
00:26:07,460 --> 00:26:13,069
s me why

611
00:26:10,278 --> 00:26:15,710
because we have the one unique

612
00:26:13,069 --> 00:26:18,118
responsibility for each of the

613
00:26:15,710 --> 00:26:21,689
implementations of the form

614
00:26:18,118 --> 00:26:23,218
and we allow it to spread through

615
00:26:21,689 --> 00:26:27,229
the different implementations

616
00:26:23,219 --> 00:26:27,229
site abstraction concrete

617
00:26:27,849 --> 00:26:31,029
how nice they were giving me the

618
00:26:29,679 --> 00:26:32,950
blackboard i'm very happy with how

619
00:26:31,029 --> 00:26:35,339
would that be ok let's continue

620
00:26:32,950 --> 00:26:35,340
so

621
00:26:40,400 --> 00:26:43,820
based on the example that we saw a good

622
00:26:42,170 --> 00:26:45,680
class design allows to add

623
00:26:43,819 --> 00:26:47,928
unedited code functionality

624
00:26:45,680 --> 00:26:49,639
preexisting

625
00:26:47,929 --> 00:26:51,110
because it is important to think about

626
00:26:49,638 --> 00:26:53,659
interfaces

627
00:26:51,109 --> 00:26:55,579
because when we create the classes

628
00:26:53,660 --> 00:26:57,330
concrete just as we saw in the

629
00:26:55,579 --> 00:26:59,339
fresh example

630
00:26:57,329 --> 00:27:01,379
that's where we define functionality

631
00:26:59,339 --> 00:27:04,129
but the interface defines us as it should

632
00:27:01,380 --> 00:27:07,050
be that contract to that way of ordering

633
00:27:04,130 --> 00:27:08,370
in what way are we going to work the

634
00:27:07,049 --> 00:27:11,220
functionalities for each case

635
00:27:08,369 --> 00:27:14,089
particular goes from the most general to

636
00:27:11,220 --> 00:27:14,089
the most particular

637
00:27:14,289 --> 00:27:18,730
and as a runner and it seems to me that

638
00:27:16,690 --> 00:27:20,559
is also covered share it avoid

639
00:27:18,730 --> 00:27:22,410
pre-existing code editing reduces

640
00:27:20,559 --> 00:27:24,490
the risk of creating new errors

641
00:27:22,410 --> 00:27:25,990
imagine all the times that too

642
00:27:24,490 --> 00:27:29,079
we have to modify the function this of

643
00:27:25,990 --> 00:27:31,839
Italy calculation by the mere fact that

644
00:27:29,079 --> 00:27:33,699
I have to add a new shape all

645
00:27:31,839 --> 00:27:36,769
We screw up we all put a finger of

646
00:27:33,700 --> 00:27:39,230
more out there and we can inadvertently

647
00:27:36,769 --> 00:27:41,839
make a change that basically ends

648
00:27:39,230 --> 00:27:43,250
affecting we started playing the one

649
00:27:41,839 --> 00:27:44,809
calculating the circle and inadvertently

650
00:27:43,250 --> 00:27:48,109
we change the triangle formula and

651
00:27:44,809 --> 00:27:49,759
bye we paste here the code that was

652
00:27:48,109 --> 00:27:51,829
working because we are hand doing

653
00:27:49,759 --> 00:27:53,240
both the same code base that

654
00:27:51,829 --> 00:27:55,399
starts to cause problems in that

655
00:27:53,240 --> 00:28:00,490
sense imagine two ways not

656
00:27:55,400 --> 00:28:00,490
nothing happens with 20 and it can be a problem

657
00:28:02,419 --> 00:28:08,778
Let's go then

658
00:28:04,710 --> 00:28:08,778
talk about disk replacement

659
00:28:09,009 --> 00:28:12,609
I want this to be translated for you

660
00:28:11,079 --> 00:28:13,960
I want you to have it in these next few

661
00:28:12,609 --> 00:28:17,289
minutes we are going to talk about the album

662
00:28:13,960 --> 00:28:19,000
because it is literally that if it looks like

663
00:28:17,289 --> 00:28:20,529
a duck quacks like a duck but

664
00:28:19,000 --> 00:28:23,980
need batteries is probably

665
00:28:20,529 --> 00:28:27,440
using the wrong drive and yes

666
00:28:23,980 --> 00:28:29,360
not going to extend of a class

667
00:28:27,440 --> 00:28:30,919
of a duck class if you want to use the

668
00:28:29,359 --> 00:28:33,138
the same if you want to implement a control

669
00:28:30,919 --> 00:28:35,179
remote for more than your remote control at 4

670
00:28:33,138 --> 00:28:37,898
like a duck shouldn't do that the

671
00:28:35,179 --> 00:28:37,899
idea yes

672
00:28:38,109 --> 00:28:41,638
[Music]

673
00:28:39,388 --> 00:28:43,678
each class that inherits from another we say

674
00:28:41,638 --> 00:28:46,228
can be used as your father or mother

675
00:28:43,679 --> 00:28:48,530
without knowing the differences

676
00:28:46,229 --> 00:28:50,450
between them

677
00:28:48,529 --> 00:28:53,359
what will these things mean so

678
00:28:50,450 --> 00:28:55,850
axiomatic so so poetic also the

679
00:28:53,359 --> 00:28:57,199
same time and follow all subclasses

680
00:28:55,849 --> 00:28:59,569
they must operate within the behavior

681
00:28:57,200 --> 00:29:00,920
expected of their base classes for more than

682
00:28:59,569 --> 00:29:05,559
the specific functionality be

683
00:29:00,920 --> 00:29:07,788
different this deserves blackboard

684
00:29:05,559 --> 00:29:10,079
let's go down here

685
00:29:07,788 --> 00:29:13,158
how to add a new one

686
00:29:10,079 --> 00:29:13,158
it's okay

687
00:29:14,028 --> 00:29:21,480
this is a classic of classics I have

688
00:29:18,460 --> 00:29:21,480
one class

689
00:29:21,720 --> 00:29:26,970
which is called list

690
00:29:23,788 --> 00:29:29,329
which has among its various methods a

691
00:29:26,970 --> 00:29:29,329
function

692
00:29:30,940 --> 00:29:34,799
they receive and have no matter which

693
00:29:38,669 --> 00:29:44,419
suppose you add to something that you

694
00:29:41,669 --> 00:29:44,419
llama content

695
00:29:45,500 --> 00:29:51,799
add an element that came and already

696
00:29:49,329 --> 00:29:54,278
suppose we contain a vector in

697
00:29:51,799 --> 00:29:55,808
javascript for example

698
00:29:54,278 --> 00:29:58,148
talked about you know because it's language

699
00:29:55,808 --> 00:29:59,829
that I have fresher but they can do

700
00:29:58,148 --> 00:30:02,888
the exercise of transposing the concept into

701
00:29:59,829 --> 00:30:05,259
any other language now the day of

702
00:30:02,888 --> 00:30:07,569
Imagine tomorrow I come and say che

703
00:30:05,259 --> 00:30:10,210
but I want to have a no list of

704
00:30:07,569 --> 00:30:11,979
just read also then I say well

705
00:30:10,210 --> 00:30:13,479
fantastic because i have a class

706
00:30:11,979 --> 00:30:15,909
list that does everything I need

707
00:30:13,479 --> 00:30:18,129
a list no more I need it to be from

708
00:30:15,909 --> 00:30:22,330
read only then it occurs to me to do

709
00:30:18,128 --> 00:30:27,148
a class ri 2 ri down est est ere

710
00:30:22,329 --> 00:30:31,199
Spanish English to Nova Roy Down and List and

711
00:30:27,148 --> 00:30:31,199
I say it extends

712
00:30:31,410 --> 00:30:37,080
de list o de flour

713
00:30:34,609 --> 00:30:40,658
but I don't want it to have the method of

714
00:30:37,079 --> 00:30:46,199
add then what do I do

715
00:30:40,659 --> 00:30:46,200
well I can grab define back

716
00:30:46,890 --> 00:30:54,330
and throw a mistake

717
00:30:49,869 --> 00:30:57,798
saying de cézanne around the est

718
00:30:54,329 --> 00:30:57,798
this is a read-only list

719
00:31:00,898 --> 00:31:07,819
on a scale of 1 to 10 how

720
00:31:05,029 --> 00:31:09,799
more practice is this being a very

721
00:31:07,819 --> 00:31:12,639
bad practice and 10 not at all

722
00:31:09,799 --> 00:31:15,680
1 this is very bad practice because

723
00:31:12,640 --> 00:31:21,530
because we are extending from one

724
00:31:15,680 --> 00:31:24,200
abstraction that says add adds

725
00:31:21,529 --> 00:31:26,960
whereas in the implementation that

726
00:31:24,200 --> 00:31:30,049
we're adding we say it doesn't add

727
00:31:26,960 --> 00:31:31,970
we are altering base behavior

728
00:31:30,049 --> 00:31:34,940
of the class we are with

729
00:31:31,970 --> 00:31:38,269
working and this is a problem this

730
00:31:34,940 --> 00:31:41,299
breaks the scop principle because

731
00:31:38,269 --> 00:31:43,129
because in this of which both the disc

732
00:31:41,299 --> 00:31:44,960
morry down list deberían ser

733
00:31:43,130 --> 00:31:47,030
interchangeable for any of the

734
00:31:44,960 --> 00:31:50,440
functions that use it we're

735
00:31:47,029 --> 00:31:53,539
breaking behavior then

736
00:31:50,440 --> 00:31:55,160
he implementer of these elements does not

737
00:31:53,539 --> 00:31:56,420
you will know the differences between

738
00:31:55,160 --> 00:31:59,540
each one of these indies you're on

739
00:31:56,420 --> 00:32:03,160
particular but they broke by breaking the

740
00:31:59,539 --> 00:32:05,289
contract that means the am function

741
00:32:03,160 --> 00:32:07,480
we are altering behavior if

742
00:32:05,289 --> 00:32:09,460
you want a list to be just

743
00:32:07,480 --> 00:32:12,309
read don't expose a function to not

744
00:32:09,460 --> 00:32:14,169
do this rewrite it and leave it with

745
00:32:12,309 --> 00:32:16,690
an error or

746
00:32:14,169 --> 00:32:18,369
and the error is a solution a little bit

747
00:32:16,690 --> 00:32:20,109
more decent than leaving it empty and not

748
00:32:18,368 --> 00:32:21,428
do nothing because the mistake at least

749
00:32:20,108 --> 00:32:23,319
you can capture it or do something

750
00:32:21,429 --> 00:32:25,600
inform the developer

751
00:32:23,319 --> 00:32:29,950
somehow

752
00:32:25,599 --> 00:32:33,609
but notice how it's so simple what

753
00:32:29,950 --> 00:32:35,080
and this on many sides I am sure

754
00:32:33,609 --> 00:32:36,908
that the whole person who is also

755
00:32:35,079 --> 00:32:39,428
seeing this at some point they saw something

756
00:32:36,909 --> 00:32:42,919
like this somehow this is

757
00:32:39,429 --> 00:32:45,470
more common than you think then

758
00:32:42,919 --> 00:32:46,820
we don't have to alter behavior

759
00:32:45,470 --> 00:32:48,450
of the abstractions in which we

760
00:32:46,819 --> 00:32:50,789
we base

761
00:32:48,450 --> 00:32:52,500
because if not what are we for

762
00:32:50,789 --> 00:32:54,109
spreading of that abstraction and this

763
00:32:52,500 --> 00:32:55,890
It also has a little to do with

764
00:32:54,109 --> 00:32:57,929
It is

765
00:32:55,890 --> 00:32:59,430
with something that we saw far above

766
00:32:57,930 --> 00:33:02,039
we will see in 3d with segregation of

767
00:32:59,430 --> 00:33:04,289
interfaces because we are exposing a

768
00:33:02,039 --> 00:33:05,879
method that a wheel a list does not have

769
00:33:04,289 --> 00:33:07,319
to have because it's read-only is

770
00:33:05,880 --> 00:33:09,920
just then we are re

771
00:33:07,319 --> 00:33:12,519
using the wrong extraction

772
00:33:09,920 --> 00:33:12,519
good

773
00:33:12,619 --> 00:33:19,119
let's continue what else do we have on

774
00:33:16,119 --> 00:33:19,119
lisboa

775
00:33:21,339 --> 00:33:25,480
just what we are talking about for

776
00:33:22,930 --> 00:33:27,460
that a class is then a subtype in

777
00:33:25,480 --> 00:33:30,549
terms of behavior must inherit

778
00:33:27,460 --> 00:33:32,200
its members and operate within

779
00:33:30,549 --> 00:33:35,379
limits of his original behavior

780
00:33:32,200 --> 00:33:37,390
there they are saying on twitter to stay

781
00:33:35,380 --> 00:33:40,060
saved well it will be saved

782
00:33:37,390 --> 00:33:41,530
on our youtube channel it's there

783
00:33:40,059 --> 00:33:44,829
Miguel, if you can do me the favor of

784
00:33:41,529 --> 00:33:46,329
show the little sign of the east channel and

785
00:33:44,829 --> 00:33:48,639
it's just telling me still for

786
00:33:46,329 --> 00:33:50,199
extend the same method we can have

787
00:33:48,640 --> 00:33:51,970
consider patterns like the template

788
00:33:50,200 --> 00:33:54,580
method but conceptually extends and

789
00:33:51,970 --> 00:33:56,860
does not change its nature there are patterns of

790
00:33:54,579 --> 00:33:59,529
design that help us accommodate a little

791
00:33:56,859 --> 00:34:01,629
this kind of thing is true is something that

792
00:33:59,529 --> 00:34:03,160
could show you chat in another in another

793
00:34:01,630 --> 00:34:04,420
encounter there is also an idea of

794
00:34:03,160 --> 00:34:06,730
start talking a little bit more about

795
00:34:04,420 --> 00:34:09,269
design patterns

796
00:34:06,730 --> 00:34:11,378
this talk of solid comes exactly to

797
00:34:09,269 --> 00:34:13,648
open the way to start these

798
00:34:11,378 --> 00:34:13,648
discussions

799
00:34:13,880 --> 00:34:17,119
so we say for a class to be

800
00:34:15,889 --> 00:34:19,489
a subtype in terms of behavior

801
00:34:17,119 --> 00:34:20,659
must inherit its members and operate

802
00:34:19,489 --> 00:34:22,759
within the limits of your

803
00:34:20,659 --> 00:34:24,799
original behavior if a subtype

804
00:34:22,760 --> 00:34:28,320
does something the base class doesn't expect

805
00:34:24,800 --> 00:34:31,140
is breaking this principle

806
00:34:28,320 --> 00:34:34,410
only question if it would be correct if

807
00:34:31,139 --> 00:34:36,489
round them up if you were the list parent in

808
00:34:34,409 --> 00:34:38,829
this case

809
00:34:36,489 --> 00:34:41,259
would not violate the principle would not break the

810
00:34:38,829 --> 00:34:45,549
principle would be more correct but

811
00:34:41,260 --> 00:34:48,760
semantically it would have to be revised

812
00:34:45,550 --> 00:34:51,130
able to call it second list

813
00:34:48,760 --> 00:34:53,080
class out there we could call it like

814
00:34:51,130 --> 00:34:54,640
right evo ready something that indicates

815
00:34:53,079 --> 00:34:56,619
that list if you can write but

816
00:34:54,639 --> 00:34:59,019
if it would be more correct in terms of sun

817
00:34:56,619 --> 00:35:01,769
it's very good very good observation

818
00:34:59,019 --> 00:35:01,769
thanks doctor

819
00:35:01,880 --> 00:35:06,789
alright another quick example going back to

820
00:35:04,280 --> 00:35:06,790
geometric shapes

821
00:35:09,219 --> 00:35:15,159
suppose we have this kind of

822
00:35:11,679 --> 00:35:16,358
rectangle we have a member a

823
00:35:15,159 --> 00:35:19,598
private property

824
00:35:16,358 --> 00:35:22,239
with width and height and we have methods to

825
00:35:19,599 --> 00:35:24,599
set width and height each

826
00:35:22,239 --> 00:35:24,598
separately

827
00:35:24,619 --> 00:35:28,190
we can have a discussion apart from

828
00:35:26,570 --> 00:35:30,830
follow thesis etc is the best strategy

829
00:35:28,190 --> 00:35:33,409
we can also discuss if it shouldn't

830
00:35:30,829 --> 00:35:37,009
having a constructor is code from

831
00:35:33,409 --> 00:35:40,339
example shouldn't be the focus now

832
00:35:37,010 --> 00:35:42,080
suppose we define that a square

833
00:35:40,340 --> 00:35:44,480
is an extension of a rectangle because

834
00:35:42,079 --> 00:35:46,909
well it has four sides it has width and

835
00:35:44,480 --> 00:35:48,530
high the square has the particularity

836
00:35:46,909 --> 00:35:50,239
that width and height are always

837
00:35:48,530 --> 00:35:53,000
equal then we say well give it

838
00:35:50,239 --> 00:35:55,129
let's recompose to redefine the

839
00:35:53,000 --> 00:35:58,010
set height function set height

840
00:35:55,130 --> 00:36:01,340
and we're going to make it call the function

841
00:35:58,010 --> 00:36:04,930
father or mother of being height and also

842
00:36:01,340 --> 00:36:08,500
let's make her accept me

843
00:36:04,929 --> 00:36:10,000
and if that were not or were not enough

844
00:36:08,500 --> 00:36:13,460
to make it act also do what

845
00:36:10,000 --> 00:36:16,670
same you set the height

846
00:36:13,460 --> 00:36:19,000
half that makes a fuss with everything

847
00:36:16,670 --> 00:36:19,000
this

848
00:36:19,369 --> 00:36:23,599
if I will ask you why I violated the

849
00:36:21,409 --> 00:36:25,518
disk replacement principle is going to

850
00:36:23,599 --> 00:36:27,859
be from what we saw a while ago is

851
00:36:25,518 --> 00:36:31,259
altering classroom behavior

852
00:36:27,858 --> 00:36:34,920
orc rectangle is the base class

853
00:36:31,260 --> 00:36:38,340
with which if it can be more

854
00:36:34,920 --> 00:36:41,610
practical than implementing a square

855
00:36:38,340 --> 00:36:45,000
do these little tricks but it's not clear no

856
00:36:41,610 --> 00:36:47,160
it's obvious and your future and future self of

857
00:36:45,000 --> 00:36:48,510
here makes a lot of time here

858
00:36:47,159 --> 00:36:50,069
tell why this class is me

859
00:36:48,510 --> 00:36:53,640
changing the stop when I say the

860
00:36:50,070 --> 00:36:55,769
width that kind of decision is the one that

861
00:36:53,639 --> 00:36:58,170
makes me see in time we have a

862
00:36:55,769 --> 00:37:00,239
little bit of anger ourselves for not

863
00:36:58,170 --> 00:37:01,950
document it or by making a decision to

864
00:37:00,239 --> 00:37:04,439
design that's a little bit controversial

865
00:37:01,949 --> 00:37:06,859
in this sense to solid is a big no

866
00:37:04,440 --> 00:37:09,079
don't do this yes

867
00:37:06,860 --> 00:37:10,940
imagine this can be transported

868
00:37:09,079 --> 00:37:12,380
to much more complex systems where if

869
00:37:10,940 --> 00:37:14,659
this happens the consequences are a

870
00:37:12,380 --> 00:37:16,430
little bit more chaotic mixes in the case

871
00:37:14,659 --> 00:37:19,879
of a good geometric figure a case

872
00:37:16,429 --> 00:37:23,919
simple but think like this in a case

873
00:37:19,880 --> 00:37:23,920
greater can be more complicated

874
00:37:26,440 --> 00:37:32,300
we have this example and you also d

875
00:37:29,639 --> 00:37:37,759
stealing a little java

876
00:37:32,300 --> 00:37:39,800
is a stack class that the person who

877
00:37:37,760 --> 00:37:41,270
was development let's imagine that we

878
00:37:39,800 --> 00:37:44,830
they sent a pull request with this one

879
00:37:41,269 --> 00:37:48,548
dust and quest with this code and this

880
00:37:44,829 --> 00:37:51,098
we have grail list probe

881
00:37:48,548 --> 00:37:54,099
and we use it to add and elements

882
00:37:51,099 --> 00:37:56,260
and to remove and when we use in

883
00:37:54,099 --> 00:37:59,800
our little program

884
00:37:56,260 --> 00:38:01,030
we also have a clear function

885
00:37:59,800 --> 00:38:04,690
and we say that this implementation

886
00:38:01,030 --> 00:38:06,910
also breaks liskov because

887
00:38:04,690 --> 00:38:09,159
because no structure structure of

888
00:38:06,909 --> 00:38:11,440
stack we have a method that allows you

889
00:38:09,159 --> 00:38:12,129
erase things the only thing you can do

890
00:38:11,440 --> 00:38:13,780
is puig

891
00:38:12,130 --> 00:38:16,720
it is just the beginning of a class

892
00:38:13,780 --> 00:38:18,280
stack which is a stack then no

893
00:38:16,719 --> 00:38:19,809
there should be this method which was

894
00:38:18,280 --> 00:38:22,300
well but the point is that she

895
00:38:19,809 --> 00:38:23,559
offered the functionality of adding and

896
00:38:22,300 --> 00:38:26,099
remove with the arranger but

897
00:38:23,559 --> 00:38:29,619
conceptually not supported

898
00:38:26,099 --> 00:38:31,990
so how do we solve this problem

899
00:38:29,619 --> 00:38:34,930
because it's ok

900
00:38:31,989 --> 00:38:36,899
it's interesting to take advantage of a class to

901
00:38:34,929 --> 00:38:39,848
that and reuse the behavior but

902
00:38:36,900 --> 00:38:42,550
is this also how we are going to see in a

903
00:38:39,849 --> 00:38:43,960
little while breaks interface segregation because

904
00:38:42,550 --> 00:38:46,329
we are exposing a lot of methods

905
00:38:43,960 --> 00:38:48,510
that do not correspond to the context of a

906
00:38:46,329 --> 00:38:48,510
stack

907
00:38:49,760 --> 00:38:57,720
now different would it be yes

908
00:38:54,000 --> 00:38:59,889
instead of inheriting

909
00:38:57,719 --> 00:39:01,719
composition

910
00:38:59,889 --> 00:39:03,670
the biggest difference we have between

911
00:39:01,719 --> 00:39:05,308
inheritance and composition is that

912
00:39:03,670 --> 00:39:08,230
composition gives us more flexibility

913
00:39:05,309 --> 00:39:09,819
because we inject the components that

914
00:39:08,230 --> 00:39:11,409
we want to use and define the

915
00:39:09,818 --> 00:39:15,278
behavior through the interface

916
00:39:11,409 --> 00:39:17,500
of the class and we decide what

917
00:39:15,278 --> 00:39:20,798
things we expose what we are

918
00:39:17,500 --> 00:39:25,050
component hoisting and what not then

919
00:39:20,798 --> 00:39:27,269
we can use an east rule that

920
00:39:25,050 --> 00:39:28,289
for a release at this point we can

921
00:39:27,269 --> 00:39:29,759
say yes but there are others

922
00:39:28,289 --> 00:39:32,710
circumstances where it would not be

923
00:39:29,760 --> 00:39:34,480
good idea we will see

924
00:39:32,710 --> 00:39:36,480
It is

925
00:39:34,480 --> 00:39:39,070
define it as as a component

926
00:39:36,480 --> 00:39:41,380
protected or private depending on what

927
00:39:39,070 --> 00:39:44,890
level of exposure and reuse

928
00:39:41,380 --> 00:39:46,660
we want to achieve and if they look we can

929
00:39:44,889 --> 00:39:49,179
keep adding and removing and the

930
00:39:46,659 --> 00:39:52,149
clicker method is no longer on the interface

931
00:39:49,179 --> 00:39:53,559
public then stop breaking the

932
00:39:52,150 --> 00:39:55,340
disc replacement principle

933
00:39:53,559 --> 00:39:57,329
why

934
00:39:55,340 --> 00:40:00,548
we keep behaving again

935
00:39:57,329 --> 00:40:02,708
correct and we go back to what

936
00:40:00,548 --> 00:40:05,170
the abstraction we are using not

937
00:40:02,708 --> 00:40:07,298
contradicts

938
00:40:05,170 --> 00:40:10,688
the purpose of the class that we're

939
00:40:07,298 --> 00:40:12,309
designing see what we are going to do

940
00:40:10,688 --> 00:40:14,608
I want to stop here to check

941
00:40:12,309 --> 00:40:14,609
this

942
00:40:14,940 --> 00:40:19,829
all these comments from the beginning

943
00:40:16,949 --> 00:40:22,318
what we are doing have to do with

944
00:40:19,829 --> 00:40:23,700
how we design entities and

945
00:40:22,318 --> 00:40:26,519
objects and functions with which

946
00:40:23,699 --> 00:40:28,679
we work the code is anecdotal here

947
00:40:26,519 --> 00:40:30,869
don't notice what it has to do with

948
00:40:28,679 --> 00:40:32,608
a strategy of how we model the

949
00:40:30,869 --> 00:40:34,019
entities and what do we want to do with

950
00:40:32,608 --> 00:40:36,949
our code and how we have to

951
00:40:34,019 --> 00:40:40,530
plan ahead so that we can

952
00:40:36,949 --> 00:40:42,989
reuse and fail the code and that

953
00:40:40,530 --> 00:40:44,160
last a little longer and not

954
00:40:42,989 --> 00:40:45,989
we have to expose ourselves of those

955
00:40:44,159 --> 00:40:49,159
situations from ok the code up to the

956
00:40:45,989 --> 00:40:49,159
point to throw all not

957
00:40:49,509 --> 00:40:54,068
let's not look for that is the modus

958
00:40:52,329 --> 00:40:55,719
classic operandi let's not look for everything

959
00:40:54,068 --> 00:40:57,429
time the answer is you have to throw

960
00:40:55,719 --> 00:40:59,608
all overboard because it's a lot of

961
00:40:57,429 --> 00:41:03,189
effort what we do and it's exhausting

962
00:40:59,608 --> 00:41:06,518
make a blur and new account so

963
00:41:03,188 --> 00:41:08,768
often if that's why we start presenting

964
00:41:06,518 --> 00:41:11,138
these six these solution designs

965
00:41:08,768 --> 00:41:14,078
to make our code more

966
00:41:11,139 --> 00:41:15,489
more scalable resilient they start to

967
00:41:14,079 --> 00:41:18,880
pop up all those magic little words

968
00:41:15,489 --> 00:41:21,278
that now seem to us like smoke but

969
00:41:18,880 --> 00:41:23,469
they end up being very good posts

970
00:41:21,278 --> 00:41:24,880
responses to changing requirements and

971
00:41:23,469 --> 00:41:27,269
requirements that have to scale in

972
00:41:24,880 --> 00:41:27,269
time

973
00:41:29,380 --> 00:41:36,769
I breathe this we go this principle of

974
00:41:33,489 --> 00:41:39,649
interface segregation

975
00:41:36,769 --> 00:41:41,840
we should read the person or the

976
00:41:39,650 --> 00:41:43,550
consumer or the consumer of our

977
00:41:41,840 --> 00:41:45,289
entities and our objects our

978
00:41:43,550 --> 00:41:49,000
classes our functions what

979
00:41:45,289 --> 00:41:49,000
need neither more nor less

980
00:41:51,130 --> 00:41:54,460
we don't have to force expose

981
00:41:53,019 --> 00:41:56,590
functions that don't go aren't going to

982
00:41:54,460 --> 00:41:58,389
use this happened to us by example

983
00:41:56,590 --> 00:42:01,309
that we just saw and with examples

984
00:41:58,389 --> 00:42:03,059
previous of this one

985
00:42:01,309 --> 00:42:04,920
depending on what things we want

986
00:42:03,059 --> 00:42:09,170
Extending the example of the circle is that

987
00:42:04,920 --> 00:42:09,170
We saw a little while ago for example if

988
00:42:10,039 --> 00:42:14,449
and here the little word of

989
00:42:12,230 --> 00:42:16,730
composition and as friend said is a

990
00:42:14,449 --> 00:42:19,939
a little while to maintain the cohesion of

991
00:42:16,730 --> 00:42:21,679
entities this principle of segregation

992
00:42:19,940 --> 00:42:24,260
of interfaces proposes to decompose

993
00:42:21,679 --> 00:42:27,199
non-cohesive interfaces on multiple

994
00:42:24,260 --> 00:42:28,839
smaller interfaces and cisco de sivas

995
00:42:27,199 --> 00:42:31,268
yes

996
00:42:28,838 --> 00:42:32,588
the smaller the interface the more

997
00:42:31,268 --> 00:42:35,038
its implementation is easy and

998
00:42:32,588 --> 00:42:35,038
reuse

999
00:42:35,820 --> 00:42:39,830
all these principles also point to

1000
00:42:37,769 --> 00:42:43,639
that the code in every structure

1001
00:42:39,829 --> 00:42:45,989
container be short concise short

1002
00:42:43,639 --> 00:42:46,969
specific and adhered to a purpose in

1003
00:42:45,989 --> 00:42:50,729
particular

1004
00:42:46,969 --> 00:42:52,829
we look for an interface a block of

1005
00:42:50,730 --> 00:42:55,260
code does not have 4000 lines

1006
00:42:52,829 --> 00:42:58,369
nobody wants to keep that

1007
00:42:55,260 --> 00:42:58,370
I don't know if they saw out there

1008
00:42:58,860 --> 00:43:03,500
there is a code block meme that

1009
00:43:00,599 --> 00:43:05,989
has a comment block that says

1010
00:43:03,500 --> 00:43:07,789
this code works well we don't know why

1011
00:43:05,989 --> 00:43:10,879
what and many like you have tried

1012
00:43:07,789 --> 00:43:12,559
deciphering what happens in this code you

1013
00:43:10,880 --> 00:43:15,410
We recommend that you don't, but if you

1014
00:43:12,559 --> 00:43:16,849
you get to touch this code update this

1015
00:43:15,409 --> 00:43:18,440
counter with the number of hours

1016
00:43:16,849 --> 00:43:20,679
you invested in this and the accountant said

1017
00:43:18,440 --> 00:43:22,909
like 193 hours

1018
00:43:20,679 --> 00:43:25,969
It is

1019
00:43:22,909 --> 00:43:27,469
nobody wants to read miles of code

1020
00:43:25,969 --> 00:43:28,818
we all want

1021
00:43:27,469 --> 00:43:31,608
tiny concrete things and

1022
00:43:28,818 --> 00:43:33,558
functional we seek that our life

1023
00:43:31,608 --> 00:43:36,108
easier working to the extent of

1024
00:43:33,559 --> 00:43:39,609
as possible and this principle also

1025
00:43:36,108 --> 00:43:39,608
accompany and help us on that side

1026
00:43:40,000 --> 00:43:44,320
if we have well defined interfaces

1027
00:43:42,340 --> 00:43:47,140
we can improve communication between

1028
00:43:44,320 --> 00:43:49,360
class and the entities that consume those

1029
00:43:47,139 --> 00:43:50,859
classes minimizing dependency

1030
00:43:49,360 --> 00:43:52,480
regarding members and where their use and

1031
00:43:50,860 --> 00:43:53,890
reducing the coupling this that

1032
00:43:52,480 --> 00:43:55,630
we talked at first the coupling it

1033
00:43:53,889 --> 00:43:56,980
it gets us everywhere and it's very

1034
00:43:55,630 --> 00:43:59,890
difficult in a productive system

1035
00:43:56,980 --> 00:44:02,469
undock things because you have to do

1036
00:43:59,889 --> 00:44:04,119
that the system coexists with the entities

1037
00:44:02,469 --> 00:44:06,879
you have to make the changes the

1038
00:44:04,119 --> 00:44:08,699
least disruptive possible and a job

1039
00:44:06,880 --> 00:44:11,190
surgical

1040
00:44:08,699 --> 00:44:12,149
which requires a lot of work on that

1041
00:44:11,190 --> 00:44:14,220
sense that requires a lot of effort

1042
00:44:12,150 --> 00:44:16,470
so if we can start

1043
00:44:14,219 --> 00:44:18,709
anticipate those efforts a lot

1044
00:44:16,469 --> 00:44:18,709
best

1045
00:44:20,869 --> 00:44:25,460
this principle always brings this

1046
00:44:23,539 --> 00:44:28,160
corollary it's not a it's not so obvious

1047
00:44:25,460 --> 00:44:30,409
from the start but it makes sense if

1048
00:44:28,159 --> 00:44:32,598
we start to think about it a little while

1049
00:44:30,409 --> 00:44:34,670
fewer classes share interfaces less

1050
00:44:32,599 --> 00:44:37,119
changes arise from the change in

1051
00:44:34,670 --> 00:44:37,119
an interface

1052
00:44:37,309 --> 00:44:40,130
and this makes the code more

1053
00:44:38,840 --> 00:44:42,860
sturdy

1054
00:44:40,130 --> 00:44:45,180
because we say this

1055
00:44:42,860 --> 00:44:47,550
imagine we have a class a

1056
00:44:45,179 --> 00:44:49,980
messaging message interface that you

1057
00:44:47,550 --> 00:44:51,660
deals with requesting and notifying different

1058
00:44:49,980 --> 00:44:54,719
things in an app in this case in

1059
00:44:51,659 --> 00:44:57,179
the payment application

1060
00:44:54,719 --> 00:44:59,039
you have internet you have methods to ask

1061
00:44:57,179 --> 00:45:00,839
a card report that the card is

1062
00:44:59,039 --> 00:45:03,029
invalid ask for a pin inform that the

1063
00:45:00,840 --> 00:45:05,519
pin is invalid to inform that the card

1064
00:45:03,030 --> 00:45:06,780
it has been denounced to request the data of

1065
00:45:05,519 --> 00:45:08,639
an account report that there is no

1066
00:45:06,780 --> 00:45:11,670
enough money in an account to report

1067
00:45:08,639 --> 00:45:14,569
that a lot of money was deposited and

1068
00:45:11,670 --> 00:45:14,570
report a balance

1069
00:45:15,550 --> 00:45:20,140
if you think about this it also breaks

1070
00:45:17,829 --> 00:45:22,000
the beginning of the century responsability the

1071
00:45:20,139 --> 00:45:24,519
to take sole responsibility because

1072
00:45:22,000 --> 00:45:26,798
because notice all the different things

1073
00:45:24,519 --> 00:45:29,528
what this interface is doing

1074
00:45:26,798 --> 00:45:32,018
the macro principle if you are to manage a

1075
00:45:29,528 --> 00:45:33,188
bank account for example but

1076
00:45:32,018 --> 00:45:35,318
managing a bank account is a

1077
00:45:33,188 --> 00:45:37,629
giant concept at the code level there's a

1078
00:45:35,318 --> 00:45:38,679
a lot of things that can happen there

1079
00:45:37,630 --> 00:45:41,318
let's talk if we need to add

1080
00:45:38,679 --> 00:45:42,999
functionalities then if we had

1081
00:45:41,318 --> 00:45:44,768
to implement for example different

1082
00:45:42,998 --> 00:45:46,639
management systems for different types

1083
00:45:44,768 --> 00:45:48,528
account

1084
00:45:46,639 --> 00:45:52,969
imagine that we are encapsulating

1085
00:45:48,528 --> 00:45:55,389
security financial issues

1086
00:45:52,969 --> 00:45:57,189
in the same entity

1087
00:45:55,389 --> 00:45:58,088
and if we have to make any changes

1088
00:45:57,190 --> 00:45:59,559
for example if we have to do a

1089
00:45:58,088 --> 00:46:01,690
I change the mechanism of starting

1090
00:45:59,559 --> 00:46:03,569
session that for example is in the method

1091
00:46:01,690 --> 00:46:06,798
to make Ping

1092
00:46:03,568 --> 00:46:08,849
we run the risk of impacting

1093
00:46:06,798 --> 00:46:10,739
methods that are related to the

1094
00:46:08,849 --> 00:46:14,809
Check the account balance value that

1095
00:46:10,739 --> 00:46:17,269
absolutely nothing to see then

1096
00:46:14,809 --> 00:46:19,250
what can be done to fix this

1097
00:46:17,269 --> 00:46:21,800
interface that clearly breaks the

1098
00:46:19,250 --> 00:46:25,300
segregation principle

1099
00:46:21,800 --> 00:46:25,300
we start breaking it down

1100
00:46:25,579 --> 00:46:29,989
notice now we have two interfaces

1101
00:46:27,849 --> 00:46:32,630
full month login and your gold

1102
00:46:29,989 --> 00:46:34,729
messenger while they do me

1103
00:46:32,630 --> 00:46:36,769
center deals with handling messaging

1104
00:46:34,730 --> 00:46:39,340
related to login or

1105
00:46:36,769 --> 00:46:41,269
account your web messenger deals with

1106
00:46:39,340 --> 00:46:43,280
whatever has to do with the

1107
00:46:41,269 --> 00:46:45,639
account withdrawal functionality

1108
00:46:43,280 --> 00:46:49,390
money in accounts for example

1109
00:46:45,639 --> 00:46:52,358
so it is very different how we handle

1110
00:46:49,389 --> 00:46:54,639
these interfaces and here we are precisely

1111
00:46:52,358 --> 00:46:56,230
offering the functionalities that

1112
00:46:54,639 --> 00:46:58,088
need and we are not exposing

1113
00:46:56,230 --> 00:47:01,420
methods that are not necessarily going to

1114
00:46:58,088 --> 00:47:03,130
use we don't bind as they said started to

1115
00:47:01,420 --> 00:47:05,619
the consuming entity of these

1116
00:47:03,130 --> 00:47:07,480
interfaces to that you use you have

1117
00:47:05,619 --> 00:47:10,180
exposed methods that will not require

1118
00:47:07,480 --> 00:47:13,829
nor will it be used because at the business level

1119
00:47:10,179 --> 00:47:13,828
at the level requirements are incompatible

1120
00:47:15,920 --> 00:47:21,289
and now investment principle of

1121
00:47:18,798 --> 00:47:22,969
dependency if he tells me and it's very

1122
00:47:21,289 --> 00:47:24,289
important are very important in this

1123
00:47:22,969 --> 00:47:27,219
presentation memes because they are

1124
00:47:24,289 --> 00:47:30,400
really descriptive

1125
00:47:27,219 --> 00:47:33,519
sun would you give a lamp directly to

1126
00:47:30,400 --> 00:47:35,139
electrical wiring on a wall I want

1127
00:47:33,519 --> 00:47:37,210
think that the answer that most

1128
00:47:35,139 --> 00:47:40,569
are you thinking is not for how much

1129
00:47:37,210 --> 00:47:43,269
risks that begs to function can

1130
00:47:40,570 --> 00:47:46,230
work saves but there's really what

1131
00:47:43,269 --> 00:47:46,230
better we can do

1132
00:47:47,440 --> 00:47:52,300
we say then in this principle that

1133
00:47:50,320 --> 00:47:56,220
a high-level module should not depend

1134
00:47:52,300 --> 00:47:56,220
of a low level module

1135
00:47:57,739 --> 00:48:02,828
this demands blackboard

1136
00:47:59,858 --> 00:48:05,920
let's go here and let's talk a

1137
00:48:02,829 --> 00:48:08,759
little bit of why we're saying what

1138
00:48:05,920 --> 00:48:08,759
what are we saying

1139
00:48:09,389 --> 00:48:13,579
yes microsoft deigned to these thanks

1140
00:48:13,630 --> 00:48:19,940
suppose I have an entity that

1141
00:48:16,730 --> 00:48:22,099
is a list we add I'm design the

1142
00:48:19,940 --> 00:48:24,460
system a school and I have a

1143
00:48:22,099 --> 00:48:24,460
entity

1144
00:48:26,130 --> 00:48:33,650
which is called students students list that

1145
00:48:30,599 --> 00:48:35,778
is a list of students

1146
00:48:33,650 --> 00:48:39,548
and since it is a list I say well

1147
00:48:35,778 --> 00:48:39,548
fantastic i'm going to extend

1148
00:48:41,338 --> 00:48:46,130
an array list why why not

1149
00:48:48,659 --> 00:48:53,098
and I can pass whatever is of type student

1150
00:48:51,358 --> 00:48:55,078
as if I were using the tip ado e

1151
00:48:53,099 --> 00:48:56,890
even what a nice definition of classes

1152
00:48:55,079 --> 00:49:00,360
how fantastic everything

1153
00:48:56,889 --> 00:49:00,359
What is the problem with this

1154
00:49:03,869 --> 00:49:07,759
this is high level

1155
00:49:10,340 --> 00:49:14,860
and this is low level

1156
00:49:17,730 --> 00:49:25,260
what if i have to change the

1157
00:49:19,829 --> 00:49:28,980
requirement of this class and suddenly

1158
00:49:25,260 --> 00:49:32,310
I need it to be a list that I use

1159
00:49:28,980 --> 00:49:35,780
some form of unique key

1160
00:49:32,309 --> 00:49:39,820
such as a hash map

1161
00:49:35,780 --> 00:49:43,640
I am forced to change this extension

1162
00:49:39,820 --> 00:49:47,330
sorry to change this extension and I'm going to

1163
00:49:43,639 --> 00:49:49,489
break anything you have to

1164
00:49:47,329 --> 00:49:53,230
consume a estradense list because I'm

1165
00:49:49,489 --> 00:49:53,229
changing the class from which it extends

1166
00:49:53,809 --> 00:50:01,570
so this is a bass extraction

1167
00:49:57,438 --> 00:50:04,239
level on which we should not depend

1168
00:50:01,570 --> 00:50:06,730
then there are several ways to get out of

1169
00:50:04,239 --> 00:50:09,069
this bind let's say but the easiest

1170
00:50:06,730 --> 00:50:11,010
is to think in composition

1171
00:50:09,070 --> 00:50:14,000
let's take

1172
00:50:11,010 --> 00:50:14,000
All this

1173
00:50:14,840 --> 00:50:19,910
let's define an interface in any case and

1174
00:50:17,059 --> 00:50:23,059
let's say inside there is a property

1175
00:50:19,909 --> 00:50:26,889
private called students and that

1176
00:50:23,059 --> 00:50:26,889
inside we decide

1177
00:50:27,050 --> 00:50:31,430
which is because we came up with a

1178
00:50:29,900 --> 00:50:36,068
realistic but it can be anything

1179
00:50:31,429 --> 00:50:39,098
you don't need to and out

1180
00:50:36,068 --> 00:50:39,699
and outward these changes we can

1181
00:50:39,099 --> 00:50:41,829
control

1182
00:50:39,699 --> 00:50:43,539
and for the rest of the exterior it will continue

1183
00:50:41,829 --> 00:50:45,099
being a study in shock this is not going to

1184
00:50:43,539 --> 00:50:47,289
matter what abstraction it derives from

1185
00:50:45,099 --> 00:50:49,599
because he is composing he is worked by

1186
00:50:47,289 --> 00:50:51,440
composition then we don't care

1187
00:50:49,599 --> 00:50:53,420
Really

1188
00:50:51,440 --> 00:50:56,429
then you have to be careful when

1189
00:50:53,420 --> 00:50:59,610
we make these extensions

1190
00:50:56,429 --> 00:51:03,319
because we go back to one of the

1191
00:50:59,610 --> 00:51:06,680
comfort symptoms begin to affect

1192
00:51:03,320 --> 00:51:09,380
begins to generate rigidity begins to

1193
00:51:06,679 --> 00:51:12,589
restrict the possibilities of our

1194
00:51:09,380 --> 00:51:16,599
code based a decision that's easy

1195
00:51:12,590 --> 00:51:18,760
to solve with another alternative

1196
00:51:16,599 --> 00:51:21,429
they are taking in this concept to do

1197
00:51:18,760 --> 00:51:23,160
we will work we will prefer in

1198
00:51:21,429 --> 00:51:25,419
based on the things solid suggests

1199
00:51:23,159 --> 00:51:28,000
maybe play a little more with

1200
00:51:25,420 --> 00:51:30,340
composition and keep this in mind this

1201
00:51:28,000 --> 00:51:32,739
of abstractions don't use a

1202
00:51:30,340 --> 00:51:34,090
low level extraction by impact

1203
00:51:32,739 --> 00:51:36,259
that it generates later when we want to do

1204
00:51:34,090 --> 00:51:38,480
changes

1205
00:51:36,260 --> 00:51:41,020
let's go back to where I have the most here

1206
00:51:38,480 --> 00:51:41,019
is the best

1207
00:51:45,449 --> 00:51:48,019
good

1208
00:51:50,030 --> 00:51:53,180
so what do we mean by this

1209
00:51:51,800 --> 00:51:55,340
which must depend on abstractions and the

1210
00:51:53,179 --> 00:51:57,139
abstractions that are clearly not the

1211
00:51:55,340 --> 00:51:58,490
low-level modules but any

1212
00:51:57,139 --> 00:52:01,089
interface or any element that

1213
00:51:58,489 --> 00:52:01,089
we need

1214
00:52:02,269 --> 00:52:06,619
and we go back to this we go from the general

1215
00:52:04,730 --> 00:52:09,289
to the particular an abstraction cannot

1216
00:52:06,619 --> 00:52:10,940
depend on particularities the

1217
00:52:09,289 --> 00:52:14,110
particularities should depend on the

1218
00:52:10,940 --> 00:52:14,110
abstraction in that sense

1219
00:52:16,039 --> 00:52:19,579
this is the super formal way and

1220
00:52:17,989 --> 00:52:20,750
academic to say what we just

1221
00:52:19,579 --> 00:52:22,250
see in that sense if the

1222
00:52:20,750 --> 00:52:24,349
particularities of abstraction

1223
00:52:22,250 --> 00:52:26,329
change the high-level module should not

1224
00:52:24,349 --> 00:52:27,980
being affected this reduces the

1225
00:52:26,329 --> 00:52:29,480
coupling and impact of changes to

1226
00:52:27,980 --> 00:52:32,139
design level and also allows testing

1227
00:52:29,480 --> 00:52:35,909
components in isolation

1228
00:52:32,139 --> 00:52:37,679
if you look this far with this

1229
00:52:35,909 --> 00:52:40,798
with the example that I just showed

1230
00:52:37,679 --> 00:52:42,838
I can change what kind of

1231
00:52:40,798 --> 00:52:44,969
list we use internally in our

1232
00:52:42,838 --> 00:52:48,130
dance list for example and it won't

1233
00:52:44,969 --> 00:52:50,769
import because it is component ized

1234
00:52:48,130 --> 00:52:52,630
and abstraction does not depend on

1235
00:52:50,769 --> 00:52:54,929
particularity just as we just

1236
00:52:52,630 --> 00:52:54,930
of doing

1237
00:52:56,760 --> 00:53:00,420
the question comes back then what

1238
00:52:59,010 --> 00:53:01,710
we should answer this sun would give a

1239
00:53:00,420 --> 00:53:03,720
lamp directly the electric cable

1240
00:53:01,710 --> 00:53:06,449
of a wall and not because there are ways of

1241
00:53:03,719 --> 00:53:08,429
avoid them just then this no

1242
00:53:06,449 --> 00:53:10,609
let's go to the most difficult in that sense

1243
00:53:08,429 --> 00:53:10,609
yes

1244
00:53:10,949 --> 00:53:15,089
good

1245
00:53:12,480 --> 00:53:17,789
I talked a lot I told them a lot of

1246
00:53:15,090 --> 00:53:21,000
things so

1247
00:53:17,789 --> 00:53:22,710
you are invited to join me and we are going to

1248
00:53:21,000 --> 00:53:34,590
hide the screen for a while because it's

1249
00:53:22,710 --> 00:53:36,570
much more super interesting and that's why it's

1250
00:53:34,590 --> 00:53:39,269
really what what I think about what

1251
00:53:36,570 --> 00:53:41,670
I put the last one started are things that the

1252
00:53:39,269 --> 00:53:43,889
at first they seem very tedious and not

1253
00:53:41,670 --> 00:53:45,930
makes us want to read or that there

1254
00:53:43,889 --> 00:53:49,319
you see a lot finding those examples of

1255
00:53:45,929 --> 00:53:52,259
code or specific things but they can

1256
00:53:49,320 --> 00:53:54,630
save your life sit for a while and

1257
00:53:52,260 --> 00:53:57,150
think it two seconds and say how

1258
00:53:54,630 --> 00:54:02,309
theory do what can save hours

1259
00:53:57,150 --> 00:54:05,789
programming when I see people out there

1260
00:54:02,309 --> 00:54:07,710
that that starts encoding input

1261
00:54:05,789 --> 00:54:10,110
don't sit down and make a good diagram

1262
00:54:07,710 --> 00:54:13,818
say well I should think about it if the sand

1263
00:54:10,110 --> 00:54:15,619
out there to program and this happens

1264
00:54:13,818 --> 00:54:18,369
it is also part of the

1265
00:54:15,619 --> 00:54:21,230
experience a little bit when you just

1266
00:54:18,369 --> 00:54:24,460
the times

1267
00:54:21,230 --> 00:54:24,460
you only realize

1268
00:54:24,800 --> 00:54:29,450
as our dear friend per se says

1269
00:54:26,949 --> 00:54:31,189
blood

1270
00:54:29,449 --> 00:54:32,869
there are people doing softbank auding

1271
00:54:31,190 --> 00:54:36,889
that they are shot to solve

1272
00:54:32,869 --> 00:54:38,299
the problem and people that as

1273
00:54:36,889 --> 00:54:39,589
the experience of time passes or not

1274
00:54:38,300 --> 00:54:42,740
because it is also a style of

1275
00:54:39,590 --> 00:54:44,480
programming is this you can start

1276
00:54:42,739 --> 00:54:48,189
prefer design solutions a little bit

1277
00:54:44,480 --> 00:54:49,838
rather than holding you back from analysis

1278
00:54:48,190 --> 00:54:51,159
that this is the most tedious part of

1279
00:54:49,838 --> 00:54:53,980
development and that few people

1280
00:54:51,159 --> 00:54:56,469
really like but look at all the

1281
00:54:53,980 --> 00:54:58,960
things that we can tackle by remembering

1282
00:54:56,469 --> 00:55:00,939
these five principles and notice that

1283
00:54:58,960 --> 00:55:03,650
these principles don't talk about code not

1284
00:55:00,940 --> 00:55:06,440
they talk about using

1285
00:55:03,650 --> 00:55:07,519
this way of writing this line of

1286
00:55:06,440 --> 00:55:10,849
literal code in this language

1287
00:55:07,519 --> 00:55:13,309
budget are not ways to organize

1288
00:55:10,849 --> 00:55:16,719
the code tells me santi for cockroach

1289
00:55:13,309 --> 00:55:16,719
that stamina ripped from metal

1290
00:55:18,210 --> 00:55:24,570
this this kind of thing can be applied

1291
00:55:21,588 --> 00:55:26,338
to any programming language in

1292
00:55:24,570 --> 00:55:28,859
any level of experience that

1293
00:55:26,338 --> 00:55:31,559
we have because it is more than a whole

1294
00:55:28,858 --> 00:55:34,139
change of mind regarding how

1295
00:55:31,559 --> 00:55:37,460
we analyze how we face a problem and

1296
00:55:34,139 --> 00:55:37,460
how we seek to solve it

1297
00:55:38,318 --> 00:55:44,018
what we are looking for in this is to start

1298
00:55:41,559 --> 00:55:46,239
produce higher quality code

1299
00:55:44,018 --> 00:55:49,048
make it more scalable than we can

1300
00:55:46,239 --> 00:55:51,548
easily maintain and not have to walk

1301
00:55:49,048 --> 00:55:54,038
relying on memory aids to

1302
00:55:51,548 --> 00:55:56,009
remember from here two months that we wanted

1303
00:55:54,039 --> 00:55:58,329
say when we write this or that

1304
00:55:56,009 --> 00:56:01,179
this helps us to make the code more

1305
00:55:58,329 --> 00:56:03,190
easy to understand just by yourself a

1306
00:56:01,179 --> 00:56:05,889
consequence that is implemented

1307
00:56:03,190 --> 00:56:07,150
these principles can have is to reduce

1308
00:56:05,889 --> 00:56:10,118
the amount of documentation you make

1309
00:56:07,150 --> 00:56:12,249
missing because you know this combined with a

1310
00:56:10,119 --> 00:56:15,009
principle of naming things right

1311
00:56:12,248 --> 00:56:17,108
undock well component izar and also

1312
00:56:15,009 --> 00:56:20,079
all this helps the code to

1313
00:56:17,108 --> 00:56:22,958
express for yourself and that the person

1314
00:56:20,079 --> 00:56:25,119
read it requires little and no

1315
00:56:22,958 --> 00:56:27,759
contextualization of why certain

1316
00:56:25,119 --> 00:56:29,318
things more than beyond what

1317
00:56:27,759 --> 00:56:31,239
corresponds to understand the product of

1318
00:56:29,318 --> 00:56:32,588
business itself of course not that

1319
00:56:31,239 --> 00:56:33,969
always have to explain it a

1320
00:56:32,588 --> 00:56:35,858
little bit more but design decisions

1321
00:56:33,969 --> 00:56:38,048
coupled to that

1322
00:56:35,858 --> 00:56:41,980
they should start to come off a little bit

1323
00:56:38,048 --> 00:56:44,369
more naturally apart whether they have it or not

1324
00:56:41,980 --> 00:56:46,960
as fair as a comment to make

1325
00:56:44,369 --> 00:56:52,028
not only serves for maintenance

1326
00:56:46,960 --> 00:56:53,829
of for oneself and to maintain oneself for

1327
00:56:52,028 --> 00:56:55,059
What a nation in the dark the day

1328
00:56:53,829 --> 00:56:56,710
time to modify water but

1329
00:56:55,059 --> 00:56:59,859
also works for your team or

1330
00:56:56,710 --> 00:57:01,720
when we have teams and we start to

1331
00:56:59,858 --> 00:57:03,429
make the modules a little independent well

1332
00:57:01,719 --> 00:57:05,439
you work on something I work on

1333
00:57:03,429 --> 00:57:06,969
something else and when you have to

1334
00:57:05,440 --> 00:57:09,130
offer you an interface with a certain

1335
00:57:06,969 --> 00:57:11,169
functionality that the other is thinking

1336
00:57:09,130 --> 00:57:13,298
how you did it or what other

1337
00:57:11,170 --> 00:57:15,670
functions has but to try to give you what

1338
00:57:13,298 --> 00:57:19,088
what it should be and in parts that

1339
00:57:15,670 --> 00:57:21,338
understand girls easy to use and

1340
00:57:19,088 --> 00:57:25,170
people have to get into the

1341
00:57:21,338 --> 00:57:29,288
code to see what you will use is not the

1342
00:57:25,170 --> 00:57:31,599
only one is asking if it makes shelf

1343
00:57:29,289 --> 00:57:33,640
one shot is worth applying solid

1344
00:57:31,599 --> 00:57:36,160
for something that may have little time to

1345
00:57:33,639 --> 00:57:38,049
life as well as can climb

1346
00:57:36,159 --> 00:57:41,879
very much

1347
00:57:38,050 --> 00:57:43,590
I dare say yes

1348
00:57:41,880 --> 00:57:45,840
depending on the time of the invitation

1349
00:57:43,590 --> 00:57:48,210
generally the entities for a product

1350
00:57:45,840 --> 00:57:52,079
it can become ephemeral capable

1351
00:57:48,210 --> 00:57:54,659
this but such with this point of

1352
00:57:52,079 --> 00:57:58,340
scalable and worth applying

1353
00:57:54,659 --> 00:57:58,339
principles out there more than all

1354
00:57:58,360 --> 00:58:02,349
for doing practice because this is a

1355
00:58:00,880 --> 00:58:06,190
habit to develop think about

1356
00:58:02,349 --> 00:58:07,869
solidity something you have to practice it

1357
00:58:06,190 --> 00:58:10,039
but I keep thinking around there too

1358
00:58:07,869 --> 00:58:12,799
It is

1359
00:58:10,039 --> 00:58:14,539
it's not such a big effort that

1360
00:58:12,800 --> 00:58:16,940
you have to do

1361
00:58:14,539 --> 00:58:18,860
but it is to generate the habit of doing

1362
00:58:16,940 --> 00:58:21,679
pause before you start writing the

1363
00:58:18,860 --> 00:58:24,920
code even if I draw as I am

1364
00:58:21,679 --> 00:58:26,339
doing me on the board today this and see

1365
00:58:24,920 --> 00:58:28,590
Let's see

1366
00:58:26,340 --> 00:58:30,720
is this the best way to solve the

1367
00:58:28,590 --> 00:58:33,030
problem is in asking the question the

1368
00:58:30,719 --> 00:58:36,599
rest over time practice the

1369
00:58:33,030 --> 00:58:39,390
experience comes alone but I think what

1370
00:58:36,599 --> 00:58:42,360
the harder it is to pause before

1371
00:58:39,389 --> 00:58:47,069
of sitting down writing code like everyone

1372
00:58:42,360 --> 00:58:49,170
we like this but ask me questions

1373
00:58:47,070 --> 00:58:51,900
seems more is the most important thing up

1374
00:58:49,170 --> 00:58:53,659
maybe it's a good starting point as

1375
00:58:51,900 --> 00:58:57,420
to start facing this whole issue of

1376
00:58:53,659 --> 00:58:59,399
patterns of applying sun and others already at

1377
00:58:57,420 --> 00:59:02,159
less for what you see and if

1378
00:58:59,400 --> 00:59:04,559
they ask there is it worth applying

1379
00:59:02,159 --> 00:59:06,029
when they get into the habit you are not going to

1380
00:59:04,559 --> 00:59:08,579
ask that because you are going to apply

1381
00:59:06,030 --> 00:59:10,890
because it comes out directly start

1382
00:59:08,579 --> 00:59:14,130
already work that way because it's you

1383
00:59:10,889 --> 00:59:16,949
shape is your habit is the way that

1384
00:59:14,130 --> 00:59:18,599
you build software knowing that the

1385
00:59:16,949 --> 00:59:20,219
tomorrow I upload that same in beat

1386
00:59:18,599 --> 00:59:21,960
and they can use it for something

1387
00:59:20,219 --> 00:59:24,509
big they copy it what it does and

1388
00:59:21,960 --> 00:59:27,769
it works then it's the custom it's

1389
00:59:24,510 --> 00:59:27,770
start working this way

1390
00:59:28,460 --> 00:59:35,059
through questions further back guys

1391
00:59:32,989 --> 00:59:36,799
know good online resources type

1392
00:59:35,059 --> 00:59:38,150
freak or similar fields that allows

1393
00:59:36,800 --> 00:59:41,329
implement this to go

1394
00:59:38,150 --> 00:59:45,019
incorporating it into the day to day

1395
00:59:41,329 --> 00:59:46,999
there are a lot of resources that are

1396
00:59:45,018 --> 00:59:49,338
hanging around for this topic

1397
00:59:46,998 --> 00:59:51,379
in the link of the youtube video when

1398
00:59:49,338 --> 00:59:53,119
came out this is going to be a

1399
00:59:51,380 --> 00:59:56,269
I am going to add in addition to the

1400
00:59:53,119 --> 00:59:57,798
description of some more little things I will

1401
00:59:56,268 --> 01:00:00,279
leave a couple of useful links there that

1402
00:59:57,798 --> 01:00:04,750
can use as a reference

1403
01:00:00,280 --> 01:00:08,080
this in principle if you google

1404
01:00:04,750 --> 01:00:09,639
main suns there are plenty of

1405
01:00:08,079 --> 01:00:11,858
respect material to read more

1406
01:00:09,639 --> 01:00:15,348
depth

1407
01:00:11,858 --> 01:00:18,619
but if there is totally there is material in

1408
01:00:15,349 --> 01:00:21,070
that sense there is persistent I don't know

1409
01:00:18,619 --> 01:00:21,070
the truth

1410
01:00:23,929 --> 01:00:36,519
I don't know if even on YouTube there are many

1411
01:00:32,489 --> 01:00:39,549
things too many videos

1412
01:00:36,519 --> 01:00:43,480
it's a matter of reading a little here

1413
01:00:39,550 --> 01:00:45,370
over there and take a little bit out of each side and

1414
01:00:43,480 --> 01:00:48,039
only weapons of the concept me for example

1415
01:00:45,369 --> 01:00:50,710
my particular case agreed to me they touched me

1416
01:00:48,039 --> 01:00:53,529
study patterns at the time and want

1417
01:00:50,710 --> 01:00:56,230
not seeing or not studying them wikipedia

1418
01:00:53,530 --> 01:00:59,710
it seems crazy to me and yes because wikipedia

1419
01:00:56,230 --> 01:01:01,480
and wikipedia were well explained and

1420
01:00:59,710 --> 01:01:04,659
the way to practice them was to do

1421
01:01:01,480 --> 01:01:07,750
small pieces of concrete code

1422
01:01:04,659 --> 01:01:12,618
until they grab the knack let's say 7

1423
01:01:07,750 --> 01:01:14,730
incorporates frank question

1424
01:01:12,619 --> 01:01:16,050
in addition to such scripts and others

1425
01:01:14,730 --> 01:01:21,170
tools can help us to

1426
01:01:16,050 --> 01:01:21,170
apply these concepts the modeling

1427
01:01:23,789 --> 01:01:28,019
there's a topic with this question that's

1428
01:01:25,590 --> 01:01:31,050
very comfortable which is the bran

1429
01:01:28,019 --> 01:01:33,269
one of the things that more than more

1430
01:01:31,050 --> 01:01:36,970
marketing in the talk is that it transcends

1431
01:01:33,269 --> 01:01:40,179
script languages ​​itself

1432
01:01:36,969 --> 01:01:42,089
the only thing it adds to you is the question of

1433
01:01:40,179 --> 01:01:45,629
you pdo

1434
01:01:42,090 --> 01:01:47,640
if all the conceptual analysis for

1435
01:01:45,630 --> 01:01:49,349
apply the principles and you can also

1436
01:01:47,639 --> 01:01:51,869
explain with work so you

1437
01:01:49,349 --> 01:01:54,089
I assure and exactly of the articles

1438
01:01:51,869 --> 01:01:55,949
that I will leave as a reference are from

1439
01:01:54,090 --> 01:01:58,829
how to implement it particularly in

1440
01:01:55,949 --> 01:02:00,689
javascript because I don't know why if it's

1441
01:01:58,829 --> 01:02:03,179
by the multi paradigmatic nature

1442
01:02:00,690 --> 01:02:04,740
of language or because she goes

1443
01:02:03,179 --> 01:02:08,129
simply and a half that no one

1444
01:02:04,739 --> 01:02:09,059
that's why it kind of seems like

1445
01:02:08,130 --> 01:02:10,320
ser front end

1446
01:02:09,059 --> 01:02:11,789
own which front-end has a lot

1447
01:02:10,320 --> 01:02:13,260
difficulty incorporating this concept

1448
01:02:11,789 --> 01:02:16,469
conditioned but pediment of different

1449
01:02:13,260 --> 01:02:19,890
not in a different stand

1450
01:02:16,469 --> 01:02:22,439
long ago it is an environment where

1451
01:02:19,889 --> 01:02:26,489
we work there are no distinctions in that

1452
01:02:22,440 --> 01:02:27,869
sense this I even think there was something

1453
01:02:26,489 --> 01:02:30,659
you had to see an article a

1454
01:02:27,869 --> 01:02:33,659
time that showed how in riad you can

1455
01:02:30,659 --> 01:02:35,879
use solid principles there

1456
01:02:33,659 --> 01:02:39,329
ways of transporting it perfectly

1457
01:02:35,880 --> 01:02:40,980
to the context that we can use what

1458
01:02:39,329 --> 01:02:42,989
important here is

1459
01:02:40,980 --> 01:02:44,730
when designing the entities or by

1460
01:02:42,989 --> 01:02:46,319
example if I have to create a service or

1461
01:02:44,730 --> 01:02:48,570
a class in some framework that

1462
01:02:46,320 --> 01:02:49,980
use for example I'm going to stay with

1463
01:02:48,570 --> 01:02:52,260
the example of xavestre because it moves away

1464
01:02:49,980 --> 01:02:54,840
of the question is to start wondering

1465
01:02:52,260 --> 01:02:56,340
ok if i have to design a service

1466
01:02:54,840 --> 01:02:57,780
then I have to reuse parts of

1467
01:02:56,340 --> 01:02:59,550
that service no layers layers I can

1468
01:02:57,780 --> 01:03:02,340
break it down into smaller services

1469
01:02:59,550 --> 01:03:04,710
for example this if I have to work

1470
01:03:02,340 --> 01:03:05,670
with age types with structure of

1471
01:03:04,710 --> 01:03:07,769
data that I'm going to have to be

1472
01:03:05,670 --> 01:03:10,380
using i'm making the best

1473
01:03:07,769 --> 01:03:11,969
abstractions that I can are the shapes

1474
01:03:10,380 --> 01:03:14,130
easier to organize or I'm

1475
01:03:11,969 --> 01:03:15,449
exposing a lot of elements that the

1476
01:03:14,130 --> 01:03:18,210
implementation are not going to be used in

1477
01:03:15,449 --> 01:03:20,250
actually those are the questions that go

1478
01:03:18,210 --> 01:03:23,340
to be thinks let's think of solid as a

1479
01:03:20,250 --> 01:03:24,829
sort of checklist of questions that

1480
01:03:23,340 --> 01:03:27,690
we have to ask ourselves when

1481
01:03:24,829 --> 01:03:30,108
work and apply the design of

1482
01:03:27,690 --> 01:03:30,108
these entities

1483
01:03:34,900 --> 01:03:42,410
so much that kinda relates to the one

1484
01:03:40,030 --> 01:03:44,750
always intersects with these principles

1485
01:03:42,409 --> 01:03:46,219
but they cost there to unite all the

1486
01:03:44,750 --> 01:03:48,320
pieces

1487
01:03:46,219 --> 01:03:52,608
kinda the same thing we always say no

1488
01:03:48,320 --> 01:03:54,769
little by little you will catch the habit no

1489
01:03:52,608 --> 01:03:56,358
I mean that in one in one

1490
01:03:54,769 --> 01:03:58,550
same piece of code is going to incorporate

1491
01:03:56,358 --> 01:04:00,289
all the concepts in the world so that

1492
01:03:58,550 --> 01:04:02,930
I know that you will always have a little more

1493
01:04:00,289 --> 01:04:05,509
of one a little more of another the same with

1494
01:04:02,929 --> 01:04:07,730
the theme of high collection and bass

1495
01:04:05,510 --> 01:04:09,320
compliance that is to what extent is

1496
01:04:07,730 --> 01:04:12,019
well the low coupling up to what

1497
01:04:09,320 --> 01:04:14,660
point is good the high correction is

1498
01:04:12,019 --> 01:04:16,519
something about the size of the software that

1499
01:04:14,659 --> 01:04:19,639
you are going to create also remember that

1500
01:04:16,519 --> 01:04:21,739
you can have very very very low

1501
01:04:19,639 --> 01:04:23,539
compliance but perhaps the complexity

1502
01:04:21,739 --> 01:04:26,299
of the software will grow in terms of

1503
01:04:23,539 --> 01:04:28,190
number of pieces of file code

1504
01:04:26,300 --> 01:04:32,180
Whatever

1505
01:04:28,190 --> 01:04:33,559
there is a very blurred line and a half and

1506
01:04:32,179 --> 01:04:36,559
let's say you have to consider but

1507
01:04:33,559 --> 01:04:38,210
here and that line is determined by the

1508
01:04:36,559 --> 01:04:41,710
criteria and from the experience that

1509
01:04:38,210 --> 01:04:41,710
let's incorporate in this sense

1510
01:04:42,789 --> 01:04:46,528
what a good question the one that just

1511
01:04:44,380 --> 01:04:46,528
do

1512
01:04:46,778 --> 01:04:51,188
I am from programming oriented

1513
01:04:48,969 --> 01:04:55,028
objects or can be applied applicable

1514
01:04:51,188 --> 01:04:56,708
on other paradigms and is based on

1515
01:04:55,028 --> 01:04:59,469
principle in the paradigm oriented

1516
01:04:56,708 --> 01:05:01,058
objects but there are concepts that can

1517
01:04:59,469 --> 01:05:03,159
for example, to transpose the paradigm of

1518
01:05:01,059 --> 01:05:05,000
functional programming

1519
01:05:03,159 --> 01:05:08,368
It is

1520
01:05:05,000 --> 01:05:10,530
specifically on the composition side

1521
01:05:08,369 --> 01:05:13,400
and by how do you extend this

1522
01:05:10,530 --> 01:05:16,040
it makes sense to think about it from that side

1523
01:05:13,400 --> 01:05:17,510
although it is more than everything designed to

1524
01:05:16,039 --> 01:05:19,489
object events and this can be

1525
01:05:17,510 --> 01:05:22,400
applicable perhaps not all principles

1526
01:05:19,489 --> 01:05:24,169
maybe some more than others but yes

1527
01:05:22,400 --> 01:05:26,420
should be able to after putting others

1528
01:05:24,170 --> 01:05:28,780
paradigms if we are a little thing that

1529
01:05:26,420 --> 01:05:30,639
I stay where you turn this

1530
01:05:28,780 --> 01:05:32,500
just like with design patterns

1531
01:05:30,639 --> 01:05:34,389
which is a topic that we are going to start

1532
01:05:32,500 --> 01:05:37,360
touch in next videos in next

1533
01:05:34,389 --> 01:05:39,279
transmissions let's think there is always

1534
01:05:37,360 --> 01:05:42,220
a traitor there is always something we give up

1535
01:05:39,280 --> 01:05:44,230
some concession that we make for by

1536
01:05:42,219 --> 01:05:46,179
favor certain aspects of the code not

1537
01:05:44,230 --> 01:05:47,860
we can have 100% of things

1538
01:05:46,179 --> 01:05:51,039
working with all the principles and

1539
01:05:47,860 --> 01:05:52,599
all nice because there is just

1540
01:05:51,039 --> 01:05:54,579
principles that at some point collide

1541
01:05:52,599 --> 01:05:56,500
each other based on the requirements of

1542
01:05:54,579 --> 01:05:58,000
business and let's not forget that

1543
01:05:56,500 --> 01:06:01,090
we write codes because we work on

1544
01:05:58,000 --> 01:06:03,670
that then we can have everything

1545
01:06:01,090 --> 01:06:05,230
technical purist we want but no

1546
01:06:03,670 --> 01:06:07,059
you have to forget that there is a project and

1547
01:06:05,230 --> 01:06:08,740
a motivation and a purpose for the

1548
01:06:07,059 --> 01:06:09,849
which one we are writing the code not

1549
01:06:08,739 --> 01:06:13,479
we write codes because it's for

1550
01:06:09,849 --> 01:06:15,969
write code or yes but the idea is that

1551
01:06:13,480 --> 01:06:20,380
let's not lose the axis of that concept

1552
01:06:15,969 --> 01:06:22,269
yes because I think that out there is fine

1553
01:06:20,380 --> 01:06:24,670
maintain all good practices and

1554
01:06:22,269 --> 01:06:26,199
all the patterns that you can always

1555
01:06:24,670 --> 01:06:28,240
and when they don't go away from you

1556
01:06:26,199 --> 01:06:31,869
ask why you're going to end up working you

1557
01:06:28,239 --> 01:06:34,119
you lose hours and budget and everything

1558
01:06:31,869 --> 01:06:35,980
let's say for work it wasn't

1559
01:06:34,119 --> 01:06:37,779
necessary to leave the idea is that this we

1560
01:06:35,980 --> 01:06:39,480
save time not to save time

1561
01:06:37,780 --> 01:06:43,220
extra

1562
01:06:39,480 --> 01:06:43,219
to another question I saw

1563
01:06:51,590 --> 01:06:56,130
when you come in morgan and if you give

1564
01:06:54,900 --> 01:07:00,119
note that in each block you have a

1565
01:06:56,130 --> 01:07:01,650
rat as he recommends is to start to

1566
01:07:00,119 --> 01:07:03,269
have good practices and befriend

1567
01:07:01,650 --> 01:07:07,700
design patterns and apply get out

1568
01:07:03,269 --> 01:07:07,699
in one let's say yes yes

1569
01:07:08,300 --> 01:07:15,320
is to start thinking about how to

1570
01:07:12,500 --> 01:07:16,699
reproduce how to rethink the

1571
01:07:15,320 --> 01:07:19,330
same problem you are trying to solve

1572
01:07:16,699 --> 01:07:19,329
from another perspective

1573
01:07:20,260 --> 01:07:25,240
Now there are many times that I think

1574
01:07:23,650 --> 01:07:26,260
all must have passed us all

1575
01:07:25,239 --> 01:07:27,609
people who are here we have

1576
01:07:26,260 --> 01:07:31,510
past we've had to develop

1577
01:07:27,610 --> 01:07:33,400
a form of whatever

1578
01:07:31,510 --> 01:07:37,060
forms are everywhere

1579
01:07:33,400 --> 01:07:39,130
how many times have we ever redesigned me

1580
01:07:37,059 --> 01:07:40,719
they pass career for example I must

1581
01:07:39,130 --> 01:07:42,369
have designed six systems

1582
01:07:40,719 --> 01:07:44,469
generation of forms together with

1583
01:07:42,369 --> 01:07:46,269
dynamic fields

1584
01:07:44,469 --> 01:07:49,929
and I guarantee that I added to all

1585
01:07:46,269 --> 01:07:52,090
something or get something out of it because of repeating

1586
01:07:49,929 --> 01:07:53,919
exercise makes you rethink your

1587
01:07:52,090 --> 01:07:55,809
analysis of the problem you chords you

1588
01:07:53,920 --> 01:07:57,340
deny with this before and that's a

1589
01:07:55,809 --> 01:07:59,389
problem then I'm going to change the

1590
01:07:57,340 --> 01:08:02,010
behavior

1591
01:07:59,389 --> 01:08:05,339
but there are a lot of things that

1592
01:08:02,010 --> 01:08:07,980
as we practice on that

1593
01:08:05,340 --> 01:08:10,200
practice practice practice befriend

1594
01:08:07,980 --> 01:08:12,869
with design patterns not knowing

1595
01:08:10,199 --> 01:08:15,239
those by heart but to know where

1596
01:08:12,869 --> 01:08:17,939
context serve us there are very

1597
01:08:15,239 --> 01:08:20,729
taken to learn this

1598
01:08:17,939 --> 01:08:22,469
to learn about design patterns to

1599
01:08:20,729 --> 01:08:27,718
see if I can quickly find the one

1600
01:08:22,469 --> 01:08:31,020
I know while you're looking for truth he doesn't

1601
01:08:27,719 --> 01:08:33,600
just befriend the sun and the

1602
01:08:31,020 --> 01:08:35,759
patterns but what we were saying about

1603
01:08:33,600 --> 01:08:40,980
Well friend, take your time

1604
01:08:35,759 --> 01:08:43,380
stop don't lengthen the keys and five and

1605
01:08:40,979 --> 01:08:45,869
seven a doodle cartoonist the class

1606
01:08:43,380 --> 01:08:48,000
see how you should do it

1607
01:08:45,869 --> 01:08:50,579
or what happens to me for wii me a

1608
01:08:48,000 --> 01:08:53,850
little bit I started doing these start to

1609
01:08:50,579 --> 01:08:56,219
write when something comes up that

1610
01:08:53,850 --> 01:08:58,529
I had not diagrammed it and there were already two

1611
01:08:56,219 --> 01:09:00,088
times it was the same when

1612
01:08:58,529 --> 01:09:02,640
there it was the second time they came

1613
01:09:00,088 --> 01:09:04,318
doing the exact same thing was braking

1614
01:09:02,640 --> 01:09:07,350
and so it doesn't stop I could follow it and

1615
01:09:04,319 --> 01:09:09,839
finish it already or I'm going and pulled it the

1616
01:09:07,350 --> 01:09:12,150
abstraction it has to be I think so

1617
01:09:09,838 --> 01:09:14,219
accordingly and then continue to

1618
01:09:12,149 --> 01:09:16,439
end is a certain saving hours

1619
01:09:14,219 --> 01:09:19,109
later because I surely forget

1620
01:09:16,439 --> 01:09:20,729
again that block and already had it solved

1621
01:09:19,109 --> 01:09:22,650
so out there that's ours

1622
01:09:20,729 --> 01:09:23,669
exercise taking time not

1623
01:09:22,649 --> 01:09:25,858
observed

1624
01:09:23,670 --> 01:09:27,569
it's easy to follow and continue a code and

1625
01:09:25,859 --> 01:09:31,380
finish it but if you know it will bring

1626
01:09:27,569 --> 01:09:34,170
back to zero gradually to

1627
01:09:31,380 --> 01:09:36,509
cantoblanco colors shot very good

1628
01:09:34,170 --> 01:09:38,699
ask when refactoring

1629
01:09:36,509 --> 01:09:40,588
he clearly wasn't tired of this

1630
01:09:38,698 --> 01:09:42,210
way is it feasible to apply solid this

1631
01:09:40,588 --> 01:09:44,930
would mean having to discard everything

1632
01:09:42,210 --> 01:09:46,699
what is already done

1633
01:09:44,930 --> 01:09:49,338
I am a supporter of migrations

1634
01:09:46,699 --> 01:09:51,289
progressive and

1635
01:09:49,338 --> 01:09:53,658
just reborn the one out so

1636
01:09:51,289 --> 01:09:56,750
can be based on ldl principles

1637
01:09:53,658 --> 01:09:58,759
isco to replace parts as

1638
01:09:56,750 --> 01:10:01,460
we are implementing we can go

1639
01:09:58,760 --> 01:10:03,440
replacing component by component

1640
01:10:01,460 --> 01:10:06,050
applying the principles of solidity to

1641
01:10:03,439 --> 01:10:07,609
man was that the main class the

1642
01:10:06,050 --> 01:10:08,810
classes the components not yet

1643
01:10:07,609 --> 01:10:11,359
are my degrees can you follow

1644
01:10:08,810 --> 01:10:13,690
running on the basis of bits of

1645
01:10:11,359 --> 01:10:16,329
code that we are replacing

1646
01:10:13,689 --> 01:10:19,448
in that sense it seems super to me

1647
01:10:16,329 --> 01:10:22,210
workable to apply on but it's a job

1648
01:10:19,448 --> 01:10:25,960
gradual we can't claim to do it in

1649
01:10:22,210 --> 01:10:27,159
a pull request all together because no no

1650
01:10:25,960 --> 01:10:30,100
is that going to work

1651
01:10:27,159 --> 01:10:33,010
ok so this component by

1652
01:10:30,100 --> 01:10:36,010
components can be applied alone

1653
01:10:33,010 --> 01:10:36,010
definitely

1654
01:10:36,840 --> 01:10:42,510
meanwhile I tell you that there was

1655
01:10:39,238 --> 01:10:43,529
turned this page very very broadcast on

1656
01:10:42,510 --> 01:10:46,409
this site

1657
01:10:43,529 --> 01:10:49,618
ree factoring a guru point has a

1658
01:10:46,408 --> 01:10:53,189
lots of material regarding the clinician to

1659
01:10:49,618 --> 01:10:56,488
solid and design patterns to everything and is

1660
01:10:53,189 --> 01:10:58,379
super super concrete is very cool for

1661
01:10:56,488 --> 01:11:02,459
read I have been using it in the laburo

1662
01:10:58,380 --> 01:11:05,039
pretty and this is very nice and helps

1663
01:11:02,460 --> 01:11:07,859
a lot to investigate a little more about

1664
01:11:05,039 --> 01:11:09,779
I didn't have this topic then so

1665
01:11:07,859 --> 01:11:11,929
surely clean a glance ávila

1666
01:11:09,779 --> 01:11:15,479
share recently and they are very cute

1667
01:11:11,929 --> 01:11:18,020
here please also comment reading working

1668
01:11:15,479 --> 01:11:21,618
in effective and draw new and code

1669
01:11:18,020 --> 01:11:21,619
didn't know him

1670
01:11:21,658 --> 01:11:26,738
the law above some things there is a

1671
01:11:25,210 --> 01:11:28,600
lot of strategies that have to do

1672
01:11:26,738 --> 01:11:31,329
with the legal code so to do

1673
01:11:28,600 --> 01:11:35,079
migrations just at work I

1674
01:11:31,329 --> 01:11:38,619
I am in the process of a migration that

1675
01:11:35,079 --> 01:11:39,670
is getting quite long this and the

1676
01:11:38,619 --> 01:11:41,649
strategy that we are adopting

1677
01:11:39,670 --> 01:11:44,649
basically this is what we told you

1678
01:11:41,649 --> 01:11:47,408
just frank is a component to the

1679
01:11:44,649 --> 01:11:50,139
You see a little step at the same time that nothing explodes

1680
01:11:47,408 --> 01:11:50,710
that everything keeps going somehow

1681
01:11:50,140 --> 01:11:53,170
mysterious

1682
01:11:50,710 --> 01:11:56,039
the mysterious no but out

1683
01:11:53,170 --> 01:11:58,480
it seems that if this one basically

1684
01:11:56,039 --> 01:12:00,100
trying to limit the area of

1685
01:11:58,479 --> 01:12:02,428
intervention as much as possible is

1686
01:12:00,100 --> 01:12:05,469
important especially in these things of

1687
01:12:02,429 --> 01:12:08,350
work with legacy and trans code in

1688
01:12:05,469 --> 01:12:10,420
transferring it a new code is super

1689
01:12:08,350 --> 01:12:12,219
super important to have a good

1690
01:12:10,420 --> 01:12:14,590
survey of what is the area of

1691
01:12:12,219 --> 01:12:16,750
intervention have super detailed

1692
01:12:14,590 --> 01:12:18,069
what are the steps and stages in

1693
01:12:16,750 --> 01:12:19,630
that this migration will take place and

1694
01:12:18,069 --> 01:12:21,090
good planning to make it

1695
01:12:19,630 --> 01:12:23,969
controllable

1696
01:12:21,090 --> 01:12:25,500
because it also has to be realistic in

1697
01:12:23,969 --> 01:12:27,210
that sense if we want to migrate a base

1698
01:12:25,500 --> 01:12:29,658
of giant code that 10 years ago

1699
01:12:27,210 --> 01:12:29,658
He has problems

1700
01:12:29,880 --> 01:12:34,940
you have to be ordered in that process

1701
01:12:32,460 --> 01:12:36,770
totally

1702
01:12:34,939 --> 01:12:38,479
there are a lot of books dedicated to

1703
01:12:36,770 --> 01:12:41,560
subject that punctually is one of those

1704
01:12:38,479 --> 01:12:47,469
more I recommend to start

1705
01:12:41,560 --> 01:12:49,900
mais I have enough material in this

1706
01:12:47,470 --> 01:12:52,240
theme for a lot of things people

1707
01:12:49,899 --> 01:12:54,879
dear there are already a lot of materials

1708
01:12:52,239 --> 01:12:56,289
there and little is said about these things

1709
01:12:54,880 --> 01:12:57,850
talk a lot about framework talk a lot

1710
01:12:56,289 --> 01:12:59,439
technology there is a lot of talk about how

1711
01:12:57,850 --> 01:13:01,840
solve problem x with tools

1712
01:12:59,439 --> 01:13:04,719
but few tools are given that

1713
01:13:01,840 --> 01:13:07,539
have to do with the problems of

1714
01:13:04,720 --> 01:13:09,250
design of code solutions that by

1715
01:13:07,539 --> 01:13:12,310
after all it is the root of all

1716
01:13:09,250 --> 01:13:14,050
other problems then

1717
01:13:12,310 --> 01:13:17,380
it's good to start thinking more about

1718
01:13:14,050 --> 01:13:20,050
analytical modeling we all like

1719
01:13:17,380 --> 01:13:21,520
be in the area typing on the keyboard

1720
01:13:20,050 --> 01:13:24,250
wildly as if there was no

1721
01:13:21,520 --> 01:13:25,900
tomorrow but notice how long we

1722
01:13:24,250 --> 01:13:27,489
we would save and we could write things

1723
01:13:25,899 --> 01:13:29,500
that we really enjoy a little more

1724
01:13:27,489 --> 01:13:31,149
At least I know we dedicate so much

1725
01:13:29,500 --> 01:13:33,550
time we think not on that side

1726
01:13:31,149 --> 01:13:36,099
let's write code nice code that we

1727
01:13:33,550 --> 01:13:39,130
like it and this tool helps in a

1728
01:13:36,100 --> 01:13:41,260
lot for that and that people with

1729
01:13:39,130 --> 01:13:42,940
the ones that work and even you

1730
01:13:41,260 --> 01:13:45,610
themselves in the future they will thank and

1731
01:13:42,939 --> 01:13:50,739
they will thank other people

1732
01:13:45,609 --> 01:13:53,279
have these considerations in that of

1733
01:13:50,739 --> 01:13:56,289
mother a little crazy to say but I mean

1734
01:13:53,279 --> 01:13:57,880
many or all or almost all

1735
01:13:56,289 --> 01:14:01,750
frameworks we work with

1736
01:13:57,880 --> 01:14:04,119
we know the language that apply

1737
01:14:01,750 --> 01:14:06,340
these concepts god

1738
01:14:04,119 --> 01:14:08,050
and the good thing is that when you go

1739
01:14:06,340 --> 01:14:10,720
grabbing the practice you give yourself

1740
01:14:08,050 --> 01:14:13,300
realize how it is that applies everything

1741
01:14:10,720 --> 01:14:16,560
since when what if I when you see the

1742
01:14:13,300 --> 01:14:19,029
class structure of a framework

1743
01:14:16,560 --> 01:14:20,830
visual for him I remember I started to

1744
01:14:19,029 --> 01:14:22,599
know when I started studying already

1745
01:14:20,829 --> 01:14:24,460
swing in time to make

1746
01:14:22,600 --> 01:14:27,130
graphical interfaces and suddenly I started

1747
01:14:24,460 --> 01:14:29,500
to see a number of patterns that

1748
01:14:27,130 --> 01:14:32,289
applied for windows extension

1749
01:14:29,500 --> 01:14:34,000
component buttons how to separate the

1750
01:14:32,289 --> 01:14:36,909
behaviors like components did

1751
01:14:34,000 --> 01:14:39,039
action on such or such and you start to

1752
01:14:36,909 --> 01:14:41,680
account on these things and really

1753
01:14:39,039 --> 01:14:42,880
how can you improve or change a

1754
01:14:41,680 --> 01:14:44,909
framework

1755
01:14:42,880 --> 01:14:47,670
knowing these concepts

1756
01:14:44,909 --> 01:14:50,670
there are similar alternatives to solid

1757
01:14:47,670 --> 01:14:54,260
solidity as the best and only way out as well

1758
01:14:50,670 --> 01:14:57,239
as well as there are thousands of frameworks and

1759
01:14:54,260 --> 01:14:59,190
hundreds of programming language there

1760
01:14:57,239 --> 01:15:01,710
hundreds of principles and good practices

1761
01:14:59,189 --> 01:15:03,779
also available solidity what I

1762
01:15:01,710 --> 01:15:05,699
know and the one that I've done tried to

1763
01:15:03,779 --> 01:15:07,949
implement I'm still

1764
01:15:05,699 --> 01:15:10,590
learning there are things that I still of

1765
01:15:07,949 --> 01:15:12,239
solid the one that costs me the most is the one

1766
01:15:10,590 --> 01:15:13,500
always as we can with a colleague in the

1767
01:15:12,239 --> 01:15:15,059
I work the one that costs me the most is the

1768
01:15:13,500 --> 01:15:17,069
dependency inversion because I think

1769
01:15:15,060 --> 01:15:18,390
injection instead of investment and I'm already

1770
01:15:17,069 --> 01:15:22,509
does a machete on the head

1771
01:15:18,390 --> 01:15:25,119
basically but but yeah

1772
01:15:22,510 --> 01:15:26,679
there are alternatives if you ask me what

1773
01:15:25,118 --> 01:15:30,828
I gave you now concrete well I don't know

1774
01:15:26,679 --> 01:15:34,279
it happens but but I do know there are

1775
01:15:30,828 --> 01:15:37,698
nobody because they must have concepts

1776
01:15:34,279 --> 01:15:39,800
similar yes yes names can

1777
01:15:37,698 --> 01:15:41,928
be different the focus can be

1778
01:15:39,800 --> 01:15:44,859
different and at some point it will

1779
01:15:41,929 --> 01:15:48,498
come together will know all the idioms

1780
01:15:44,859 --> 01:15:50,059
totally if you're pulling there

1781
01:15:48,498 --> 01:15:53,050
also something very cool that is very

1782
01:15:50,059 --> 01:15:53,050
it is a balance

1783
01:15:54,488 --> 01:15:57,948
it's also a balance sheet and you're going

1784
01:15:56,238 --> 01:16:00,768
finding for example driver software

1785
01:15:57,948 --> 01:16:04,098
donde peter shows versos writer briefing

1786
01:16:00,769 --> 01:16:05,300
swayze if there is like everything scales is what

1787
01:16:04,099 --> 01:16:07,849
that we were talking about a while ago with

1788
01:16:05,300 --> 01:16:10,519
design patterns the same goes for

1789
01:16:07,849 --> 01:16:11,719
there is always a trade off if not

1790
01:16:10,519 --> 01:16:13,070
we are finding what is the

1791
01:16:11,719 --> 01:16:14,479
downside of what we're doing

1792
01:16:13,069 --> 01:16:15,978
means that we are not

1793
01:16:14,479 --> 01:16:17,869
wondering enough what is it

1794
01:16:15,979 --> 01:16:20,690
what we are doing and we are being

1795
01:16:17,868 --> 01:16:23,889
finishing the turtle is safe out there

1796
01:16:20,689 --> 01:16:26,199
is yes

1797
01:16:23,890 --> 01:16:28,119
nothing at all is magic there is no plan no

1798
01:16:26,199 --> 01:16:30,699
there are silver vouchers in this there is no

1799
01:16:28,119 --> 01:16:33,939
prophetic recipes that save us no no

1800
01:16:30,699 --> 01:16:36,819
there are no tools solve every

1801
01:16:33,939 --> 01:16:38,049
one with their reach what they can and

1802
01:16:36,819 --> 01:16:40,269
it also depends on how we do them

1803
01:16:38,050 --> 01:16:42,940
we can use a hammer for everything if

1804
01:16:40,270 --> 01:16:54,060
we want to use a hammer for everything and not

1805
01:16:42,939 --> 01:16:54,059
I know if it's real, it's real and it's funny to me

1806
01:16:55,560 --> 01:17:03,390
yes indeed when we start to see how

1807
01:16:59,199 --> 01:17:03,389
this relates to some

1808
01:17:03,619 --> 01:17:08,899
some development styles like by

1809
01:17:05,539 --> 01:17:10,069
example this 20 and see it pent and if solid

1810
01:17:08,899 --> 01:17:12,349
it starts to make more sense when

1811
01:17:10,069 --> 01:17:13,670
I started to compose ok redundancies there

1812
01:17:12,350 --> 01:17:14,900
speaking of composition because it has to

1813
01:17:13,670 --> 01:17:17,109
give a make it up someplace

1814
01:17:14,899 --> 01:17:17,109
point

1815
01:17:17,399 --> 01:17:22,198
solid the clean code are all things that

1816
01:17:20,279 --> 01:17:24,769
complement each other and form a base

1817
01:17:22,198 --> 01:17:28,269
super cute code in that regard

1818
01:17:24,770 --> 01:17:30,340
it seems bureaucratic and tedious

1819
01:17:28,270 --> 01:17:32,290
like few things in life at the beginning

1820
01:17:30,340 --> 01:17:34,000
but when you find the love in

1821
01:17:32,289 --> 01:17:35,470
against finding the benefits and you

1822
01:17:34,000 --> 01:17:37,449
starts to work because

1823
01:17:35,470 --> 01:17:39,880
it seems something else

1824
01:17:37,449 --> 01:17:43,019
you should not be afraid to formalize

1825
01:17:39,880 --> 01:17:43,020
how we work in the code

1826
01:17:43,189 --> 01:17:50,509
and that applies to all languages ​​and

1827
01:17:46,119 --> 01:17:53,210
walk everyone you have to make a switch

1828
01:17:50,510 --> 01:17:54,690
very big with 20 keys and it comes out

1829
01:17:53,210 --> 01:17:56,609
necessary

1830
01:17:54,689 --> 01:18:00,349
and that's going to be the first pattern of

1831
01:17:56,609 --> 01:18:00,349
design let's see how to fix that

1832
01:18:02,520 --> 01:18:06,390
there are cases so they are super common in

1833
01:18:04,380 --> 01:18:11,069
that sense

1834
01:18:06,390 --> 01:18:12,090
and that we do it every so often by talking and

1835
01:18:11,069 --> 01:18:14,670
there among other very important things

1836
01:18:12,090 --> 01:18:16,829
also when we start working with

1837
01:18:14,670 --> 01:18:19,310
code and this also merits talks

1838
01:18:16,829 --> 01:18:19,309
separated

1839
01:18:19,359 --> 01:18:25,630
this if daniel this comment goes up

1840
01:18:23,430 --> 01:18:29,170
we want to use a hammer for everyone

1841
01:18:25,630 --> 01:18:33,099
but we shouldn't totally not

1842
01:18:29,170 --> 01:18:35,939
we should do and we can even

1843
01:18:33,099 --> 01:18:35,939
and asia

1844
01:18:37,368 --> 01:18:41,238
a is full of stories of people

1845
01:18:39,378 --> 01:18:45,590
developers who in production have

1846
01:18:41,238 --> 01:18:52,739
done complicated things the good factor and

1847
01:18:45,590 --> 01:18:55,319
nothing beats him and there's a lot of those good

1848
01:18:52,739 --> 01:18:59,599
oh blue cheese good patterns this is

1849
01:18:55,319 --> 01:19:02,909
a miracle moment they had come together

1850
01:18:59,600 --> 01:19:06,210
very similar things in terms of

1851
01:19:02,909 --> 01:19:08,970
projects that acting had a good factor

1852
01:19:06,210 --> 01:19:11,789
and it was my good singleton for everyone

1853
01:19:08,970 --> 01:19:14,340
century and it is spectacular and it served me

1854
01:19:11,789 --> 01:19:16,079
influenced to scam well there are those who

1855
01:19:14,340 --> 01:19:20,100
will say that this pardon does not apply

1856
01:19:16,079 --> 01:19:24,769
as a design pattern there is no pattern and

1857
01:19:20,100 --> 01:19:24,770
medium yes but as such

1858
01:19:32,439 --> 01:19:37,029
hold the 300 line switches

1859
01:19:34,300 --> 01:19:42,710
code yeah yeah sure but after

1860
01:19:37,029 --> 01:19:51,199
break the rule after fixing

1861
01:19:42,710 --> 01:19:53,000
alright well we're close to closing you

1862
01:19:51,199 --> 01:19:54,800
it seems that we make the announcements of all

1863
01:19:53,000 --> 01:19:57,560
of all our beautiful encounters

1864
01:19:54,800 --> 01:20:00,829
and we come with the goats and it's the part

1865
01:19:57,560 --> 01:20:03,680
of the goats good first of all

1866
01:20:00,829 --> 01:20:06,619
so thank you all for coming

1867
01:20:03,680 --> 01:20:08,200
watching the talks they had a lot of people

1868
01:20:06,619 --> 01:20:11,199
interacting today asking questions

1869
01:20:08,199 --> 01:20:13,670
I hope you have served something

1870
01:20:11,199 --> 01:20:15,559
remember that these videos always

1871
01:20:13,670 --> 01:20:19,159
you can see on our youtube channel

1872
01:20:15,560 --> 01:20:22,789
on YouTube bars bars elbow now

1873
01:20:19,159 --> 01:20:25,309
we have the little name after a lot

1874
01:20:22,789 --> 01:20:28,430
hours since video we have the channel

1875
01:20:25,310 --> 01:20:30,739
quoted yes yes yes because here you are

1876
01:20:28,430 --> 01:20:33,200
questions with the tapped before before

1877
01:20:30,738 --> 01:20:37,549
finish the chivas but I have to say

1878
01:20:33,199 --> 01:20:42,340
only redex exists there is no

1879
01:20:37,550 --> 01:20:43,940
answer is yes to everything and well thanks

1880
01:20:42,340 --> 01:20:45,440
remember there is on our channel

1881
01:20:43,939 --> 01:20:48,089
youtube the videos will be so much

1882
01:20:45,439 --> 01:20:50,789
this one like all the previous ones

1883
01:20:48,090 --> 01:20:54,039
surely everyone who comes too

1884
01:20:50,789 --> 01:20:55,930
need it seems me today but let's think

1885
01:20:54,039 --> 01:20:59,470
in making a playlist for

1886
01:20:55,930 --> 01:21:02,500
different themes we already have in fact

1887
01:20:59,470 --> 01:21:04,000
and try like this if there is a grandpa who is

1888
01:21:02,500 --> 01:21:06,819
broadcast is going to be on that playlist

1889
01:21:04,000 --> 01:21:09,189
we have finds lamb is divided

1890
01:21:06,819 --> 01:21:10,809
tells you in three areas we have the

1891
01:21:09,189 --> 01:21:12,369
lands of online education which are the

1892
01:21:10,810 --> 01:21:14,380
that we have been doing most of the

1893
01:21:12,369 --> 01:21:17,649
time the entrepreneurial talks

1894
01:21:14,380 --> 01:21:20,050
that we started a little while ago and the talks

1895
01:21:17,649 --> 01:21:22,239
from haiti who are the ones we are half

1896
01:21:20,050 --> 01:21:23,680
loading now with this space plus a

1897
01:21:22,239 --> 01:21:25,929
our previous lists that already

1898
01:21:23,680 --> 01:21:28,300
we had everyone have their playlist so

1899
01:21:25,930 --> 01:21:32,190
they can go up there all the

1900
01:21:28,300 --> 01:21:34,289
events that we are having out there

1901
01:21:32,189 --> 01:21:37,710
how to increase the ones that come is a

1902
01:21:34,289 --> 01:21:38,939
excellent question the easiest

1903
01:21:37,710 --> 01:21:41,279
apart from following us in all our

1904
01:21:38,939 --> 01:21:44,279
networks we have instagram twitter

1905
01:21:41,279 --> 01:21:46,979
facebook and linkedin and youtube and everything is

1906
01:21:44,279 --> 01:21:49,710
activate the bell activate the bell

1907
01:21:46,979 --> 01:21:58,269
also if we don't know this for the other

1908
01:21:49,710 --> 01:22:01,090
bernake we did that to him even

1909
01:21:58,270 --> 01:22:02,440
if you go to this address I will

1910
01:22:01,090 --> 01:22:05,680
pasar code

1911
01:22:02,439 --> 01:22:08,460
bright dot com have a little button

1912
01:22:05,680 --> 01:22:10,450
continue with the one that will be integrated

1913
01:22:08,460 --> 01:22:12,460
automatically every time we post

1914
01:22:10,449 --> 01:22:14,590
a new event we all our

1915
01:22:12,460 --> 01:22:16,480
talks to know more or less what

1916
01:22:14,590 --> 01:22:17,949
turnout we wait and how many people are going

1917
01:22:16,479 --> 01:22:19,869
to come and what interest is there in certain

1918
01:22:17,949 --> 01:22:21,250
fear all our talks although

1919
01:22:19,869 --> 01:22:23,409
then some we make them public

1920
01:22:21,250 --> 01:22:25,960
we make them go through the event bright of

1921
01:22:23,409 --> 01:22:27,519
this way we are warning I chose

1922
01:22:25,960 --> 01:22:29,439
to those who subscribe to our profile

1923
01:22:27,520 --> 01:22:30,400
organizer every time we post

1924
01:22:29,439 --> 01:22:32,769
an event they will find out

1925
01:22:30,399 --> 01:22:34,750
automatically exactly of all

1926
01:22:32,770 --> 01:22:36,790
ways try to always stay on

1927
01:22:34,750 --> 01:22:46,090
twitter y twitter instagram facebook

1928
01:22:36,789 --> 01:22:47,500
linkedin everywhere and always

1929
01:22:46,090 --> 01:22:49,600
we make publications of all

1930
01:22:47,500 --> 01:22:51,609
events we do

1931
01:22:49,600 --> 01:22:53,890
and we are making them

1932
01:22:51,609 --> 01:22:55,569
follow-up we are commenting so

1933
01:22:53,890 --> 01:22:58,990
they will always always see the

1934
01:22:55,569 --> 01:23:00,519
event comments also includes

1935
01:22:58,989 --> 01:23:02,139
activate the like bell and

1936
01:23:00,520 --> 01:23:04,360
subscribe be from the youtube channel because

1937
01:23:02,140 --> 01:23:05,980
will always notify you when with

1938
01:23:04,359 --> 01:23:07,569
anticipation when we start one of the

1939
01:23:05,979 --> 01:23:11,409
talks because they usually come

1940
01:23:07,569 --> 01:23:14,229
those scheduled to start good

1941
01:23:11,409 --> 01:23:15,880
winter atmosphere this comfort but

1942
01:23:14,229 --> 01:23:17,979
they are always programmed narrating that

1943
01:23:15,880 --> 01:23:19,690
a day in advance so yes yes already

1944
01:23:17,979 --> 01:23:22,599
they go in there you are notifying them with

1945
01:23:19,689 --> 01:23:24,609
time this case of networks are going to

1946
01:23:22,600 --> 01:23:25,980
find out easy so in that they will not

1947
01:23:24,609 --> 01:23:30,219
never grab

1948
01:23:25,979 --> 01:23:33,819
ortemán for that and I forgot it was like that

1949
01:23:30,220 --> 01:23:36,880
but always also to our website

1950
01:23:33,819 --> 01:23:39,369
org point necklace they will find a

1951
01:23:36,880 --> 01:23:40,840
calendar so giant with all the

1952
01:23:39,369 --> 01:23:43,449
events that take place in the month and not

1953
01:23:40,840 --> 01:23:46,840
only those that are made by

1954
01:23:43,449 --> 01:23:48,819
necklace but we also put

1955
01:23:46,840 --> 01:23:50,710
constantly events that give other

1956
01:23:48,819 --> 01:23:53,529
communities

1957
01:23:50,710 --> 01:23:55,480
either in workshops in meetup talks

1958
01:23:53,529 --> 01:23:57,219
we post them there to go

1959
01:23:55,479 --> 01:23:58,659
integrating participate equally go

1960
01:23:57,219 --> 01:24:02,380
knowing more about these communities and

1961
01:23:58,659 --> 01:24:04,000
more people no I don't know if I forget something else

1962
01:24:02,380 --> 01:24:07,230
that we are seeing the most part

1963
01:24:04,000 --> 01:24:10,359
important so good the broken homeland

1964
01:24:07,229 --> 01:24:12,339
remember this is an open space

1965
01:24:10,359 --> 01:24:14,889
is available to all those who

1966
01:24:12,340 --> 01:24:16,750
want to come and offer to give a

1967
01:24:14,890 --> 01:24:18,310
talk to offer a theme of

1968
01:24:16,750 --> 01:24:19,899
again by the same networks they put a

1969
01:24:18,310 --> 01:24:21,520
comment send us a little message me

1970
01:24:19,899 --> 01:24:23,589
would like to see on this topic learn

1971
01:24:21,520 --> 01:24:26,469
about this for suddenly if they would like

1972
01:24:23,590 --> 01:24:29,110
give some talk they can also

1973
01:24:26,469 --> 01:24:33,310
do through other networks

1974
01:24:29,109 --> 01:24:36,079
and we are also looking there

1975
01:24:33,310 --> 01:24:37,760
there is the link

1976
01:24:36,079 --> 01:24:40,579
can enter something is a simple

1977
01:24:37,760 --> 01:24:42,170
form a complete in some

1978
01:24:40,579 --> 01:24:43,550
questions mark some cjex a

1979
01:24:42,170 --> 01:24:45,470
little description of what you can

1980
01:24:43,550 --> 01:24:47,090
listen to it and well after that

1981
01:24:45,470 --> 01:24:48,680
we coordinate to make a call

1982
01:24:47,090 --> 01:24:51,260
talk a little more about it and coordinate

1983
01:24:48,680 --> 01:24:53,390
a date the idea of ​​this is that they can

1984
01:24:51,260 --> 01:24:55,699
share either a technology a

1985
01:24:53,390 --> 01:24:57,710
methodology some experience of yours or

1986
01:24:55,699 --> 01:25:00,050
something you feel you can contribute to the

1987
01:24:57,710 --> 01:25:01,430
community and you can help let's say to

1988
01:25:00,050 --> 01:25:03,440
all that is in this case the

1989
01:25:01,430 --> 01:25:04,760
software development or if you want

1990
01:25:03,439 --> 01:25:07,909
apply for some of the others

1991
01:25:04,760 --> 01:25:11,060
categories like undertaking one and it

1992
01:25:07,909 --> 01:25:12,729
can do but the is not open

1993
01:25:11,060 --> 01:25:15,410
space for everyone so take heart

1994
01:25:12,729 --> 01:25:17,289
run and now what we

1995
01:25:15,409 --> 01:25:20,829
we organize

1996
01:25:17,289 --> 01:25:24,010
a space for this and lastly as

1997
01:25:20,829 --> 01:25:26,019
always current discord we are

1998
01:25:24,010 --> 01:25:29,500
organizing all these talks workshops

1999
01:25:26,020 --> 01:25:32,320
and others to work and effort of

2000
01:25:29,500 --> 01:25:35,380
all its members and all the support

2001
01:25:32,319 --> 01:25:36,849
that we also have from the community as well

2002
01:25:35,380 --> 01:25:38,739
not now

2003
01:25:36,850 --> 01:25:40,510
we are currently receiving

2004
01:25:38,739 --> 01:25:42,880
donations through our portal

2005
01:25:40,510 --> 01:25:45,909
code air dot org is going to win and apart

2006
01:25:42,880 --> 01:25:48,250
we have to place also there is the

2007
01:25:45,909 --> 01:25:50,590
on-screen link for those who

2008
01:25:48,250 --> 01:25:53,590
want to contribute money in some way

2009
01:25:50,590 --> 01:25:56,970
way with coder everything you enter

2010
01:25:53,590 --> 01:25:59,739
we are currently using it for

2011
01:25:56,970 --> 01:26:03,400
improve our infrastructure power

2012
01:25:59,739 --> 01:26:06,460
improve the talks offer you more

2013
01:26:03,399 --> 01:26:09,429
quality that has more pretty things

2014
01:26:06,460 --> 01:26:10,659
greater willingness lends so from

2015
01:26:09,430 --> 01:26:13,380
already thank you very much to all those who already

2016
01:26:10,659 --> 01:26:17,619
contributed and what they are contributing with

2017
01:26:13,380 --> 01:26:20,680
let's continually say love heart

2018
01:26:17,619 --> 01:26:22,479
and he who cannot do brings a

2019
01:26:20,680 --> 01:26:24,579
monetary donation there is always the

2020
01:26:22,479 --> 01:26:28,299
possibility to go directly to the button

2021
01:26:24,579 --> 01:26:30,550
from the like retweet where he shares and I

2022
01:26:28,300 --> 01:26:32,550
I think of being the biggest part

2023
01:26:30,550 --> 01:26:35,619
can you give us today is totally

2024
01:26:32,550 --> 01:26:37,659
break it and nothing that people find out and

2025
01:26:35,619 --> 01:26:40,329
that people or propose talks or anything

2026
01:26:37,659 --> 01:26:42,880
we are always there listening

2027
01:26:40,329 --> 01:26:49,119
watching reading everything so well

2028
01:26:42,880 --> 01:26:52,569
please cheer up because this day there

2029
01:26:49,119 --> 01:26:55,829
more things more pages more risks good

2030
01:26:52,569 --> 01:26:55,829
we are growing little by little

2031
01:26:55,949 --> 01:27:00,519
nothing like I said I started to come more

2032
01:26:58,869 --> 01:27:04,750
Haitian talks so be there

2033
01:27:00,520 --> 01:27:06,310
attentive yes yes and propose that

2034
01:27:04,750 --> 01:27:08,469
sure we found someone to

2035
01:27:06,310 --> 01:27:11,619
give it

2036
01:27:08,469 --> 01:27:13,210
great thank you very much to all

2037
01:27:11,618 --> 01:27:15,639
people who joined us in

2038
01:27:13,210 --> 01:27:17,739
this talk live thanks to those who

2039
01:27:15,639 --> 01:27:20,260
are watching to read the recorded version and

2040
01:27:17,738 --> 01:27:21,759
well stay tuned and stay tuned

2041
01:27:20,260 --> 01:27:23,800
and see you in the next edition of

2042
01:27:21,760 --> 01:27:27,599
find cover thank you very much everyone

2043
01:27:23,800 --> 01:27:27,599
like and bye bye

2044
01:27:30,470 --> 01:27:50,400
[Music]

